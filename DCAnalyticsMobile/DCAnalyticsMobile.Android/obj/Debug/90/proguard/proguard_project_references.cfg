# ACW for DCAnalyticsMobile.Android
# ACW for FormsViewGroup
-keep class com.xamarin.forms.platform.android.FormsViewGroup
-keepclassmembers class com.xamarin.forms.platform.android.FormsViewGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInputTransparent(...);
   *** setInputTransparent(...);
   *** measureAndLayout(...);
   *** onLayout(...);
   *** sendBatchUpdate(...);
   *** sendViewBatchUpdate(...);
}

# ACW for GoogleGson
-keep class com.google.gson.FieldAttributes
-keepclassmembers class com.google.gson.FieldAttributes {
   <init>(...);
   *** getAnnotations(...);
   *** getDeclaredClass(...);
   *** getDeclaredType(...);
   *** getDeclaringClass(...);
   *** getName(...);
   *** getAnnotation(...);
   *** hasModifier(...);
}

-keep class com.google.gson.FieldNamingPolicy
-keepclassmembers class com.google.gson.FieldNamingPolicy {
   *** valueOf(...);
   *** values(...);
   *** translateName(...);
}

-keep class com.google.gson.FieldNamingPolicy
-keepclassmembers class com.google.gson.FieldNamingPolicy {
   *** translateName(...);
}

-keep class com.google.gson.Gson
-keepclassmembers class com.google.gson.Gson {
   <init>(...);
   *** fieldNamingStrategy(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** getAdapter(...);
   *** getAdapter(...);
   *** getDelegateAdapter(...);
   *** htmlSafe(...);
   *** newBuilder(...);
   *** newJsonReader(...);
   *** newJsonWriter(...);
   *** serializeNulls(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJsonTree(...);
   *** toJsonTree(...);
}

-keep class com.google.gson.GsonBuilder
-keepclassmembers class com.google.gson.GsonBuilder {
   <init>(...);
   *** addDeserializationExclusionStrategy(...);
   *** addSerializationExclusionStrategy(...);
   *** create(...);
   *** disableHtmlEscaping(...);
   *** disableInnerClassSerialization(...);
   *** enableComplexMapKeySerialization(...);
   *** excludeFieldsWithModifiers(...);
   *** excludeFieldsWithoutExposeAnnotation(...);
   *** generateNonExecutableJson(...);
   *** registerTypeAdapter(...);
   *** registerTypeAdapterFactory(...);
   *** registerTypeHierarchyAdapter(...);
   *** serializeNulls(...);
   *** serializeSpecialFloatingPointValues(...);
   *** setDateFormat(...);
   *** setDateFormat(...);
   *** setDateFormat(...);
   *** setExclusionStrategies(...);
   *** setFieldNamingPolicy(...);
   *** setFieldNamingStrategy(...);
   *** setLenient(...);
   *** setLongSerializationPolicy(...);
   *** setPrettyPrinting(...);
   *** setVersion(...);
}

-keep class com.google.gson.ExclusionStrategy
-keepclassmembers class com.google.gson.ExclusionStrategy {
}

-keep class com.google.gson.FieldNamingStrategy
-keepclassmembers class com.google.gson.FieldNamingStrategy {
}

-keep class com.google.gson.TypeAdapterFactory
-keepclassmembers class com.google.gson.TypeAdapterFactory {
}

-keep class com.google.gson.JsonArray
-keepclassmembers class com.google.gson.JsonArray {
   <init>(...);
   <init>(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** contains(...);
   *** deepCopy(...);
   *** get(...);
   *** iterator(...);
   *** remove(...);
   *** remove(...);
   *** set(...);
   *** size(...);
}

-keep class com.google.gson.JsonElement
-keepclassmembers class com.google.gson.JsonElement {
   <init>(...);
   *** getAsBigDecimal(...);
   *** getAsBigInteger(...);
   *** getAsBoolean(...);
   *** getAsByte(...);
   *** getAsCharacter(...);
   *** getAsDouble(...);
   *** getAsFloat(...);
   *** getAsInt(...);
   *** getAsJsonArray(...);
   *** getAsJsonNull(...);
   *** getAsJsonObject(...);
   *** getAsJsonPrimitive(...);
   *** getAsLong(...);
   *** getAsNumber(...);
   *** getAsShort(...);
   *** getAsString(...);
   *** isJsonArray(...);
   *** isJsonNull(...);
   *** isJsonObject(...);
   *** isJsonPrimitive(...);
   *** deepCopy(...);
}

-keep class com.google.gson.JsonElement
-keepclassmembers class com.google.gson.JsonElement {
   *** deepCopy(...);
}

-keep class com.google.gson.JsonNull
-keepclassmembers class com.google.gson.JsonNull {
   <init>(...);
   *** deepCopy(...);
}

-keep class com.google.gson.JsonObject
-keepclassmembers class com.google.gson.JsonObject {
   <init>(...);
   *** add(...);
   *** addProperty(...);
   *** addProperty(...);
   *** addProperty(...);
   *** addProperty(...);
   *** deepCopy(...);
   *** entrySet(...);
   *** get(...);
   *** getAsJsonArray(...);
   *** getAsJsonObject(...);
   *** getAsJsonPrimitive(...);
   *** has(...);
   *** keySet(...);
   *** remove(...);
   *** size(...);
}

-keep class com.google.gson.JsonPrimitive
-keepclassmembers class com.google.gson.JsonPrimitive {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBoolean(...);
   *** isNumber(...);
   *** isString(...);
   *** deepCopy(...);
}

-keep class com.google.gson.LongSerializationPolicy
-keepclassmembers class com.google.gson.LongSerializationPolicy {
   *** serialize(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.gson.LongSerializationPolicy
-keepclassmembers class com.google.gson.LongSerializationPolicy {
   *** serialize(...);
}

-keep class com.google.gson.TypeAdapter
-keepclassmembers class com.google.gson.TypeAdapter {
   <init>(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJsonTree(...);
   *** nullSafe(...);
   *** read(...);
   *** toJson(...);
   *** toJson(...);
   *** toJsonTree(...);
   *** write(...);
}

-keep class com.google.gson.TypeAdapter
-keepclassmembers class com.google.gson.TypeAdapter {
   *** read(...);
   *** write(...);
}

-keep class com.google.gson.stream.JsonReader
-keepclassmembers class com.google.gson.stream.JsonReader {
   <init>(...);
   *** hasNext(...);
   *** isLenient(...);
   *** setLenient(...);
   *** getPath(...);
   *** beginArray(...);
   *** beginObject(...);
   *** close(...);
   *** endArray(...);
   *** endObject(...);
   *** nextBoolean(...);
   *** nextDouble(...);
   *** nextInt(...);
   *** nextLong(...);
   *** nextName(...);
   *** nextNull(...);
   *** nextString(...);
   *** peek(...);
   *** skipValue(...);
}

-keep class com.google.gson.stream.JsonToken
-keepclassmembers class com.google.gson.stream.JsonToken {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.gson.stream.JsonWriter
-keepclassmembers class com.google.gson.stream.JsonWriter {
   <init>(...);
   *** isHtmlSafe(...);
   *** setHtmlSafe(...);
   *** isLenient(...);
   *** setLenient(...);
   *** getSerializeNulls(...);
   *** setSerializeNulls(...);
   *** beginArray(...);
   *** beginObject(...);
   *** close(...);
   *** endArray(...);
   *** endObject(...);
   *** flush(...);
   *** jsonValue(...);
   *** name(...);
   *** nullValue(...);
   *** setIndent(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
}

-keep class com.google.gson.reflect.TypeToken
-keepclassmembers class com.google.gson.reflect.TypeToken {
   <init>(...);
   *** getRawType(...);
   *** getType(...);
   *** equals(...);
   *** get(...);
   *** get(...);
   *** getArray(...);
   *** getParameterized(...);
   *** hashCode(...);
   *** toString(...);
}

# ACW for Naxam.Mapbox.Droid
-keep class com.mapbox.mapboxsdk.ModuleProvider
-keepclassmembers class com.mapbox.mapboxsdk.ModuleProvider {
}

-keep class com.mapbox.mapboxsdk.Mapbox
-keepclassmembers class com.mapbox.mapboxsdk.Mapbox {
   *** getAccessToken(...);
   *** setAccessToken(...);
   *** getApplicationContext(...);
   *** hasInstance(...);
   *** getModuleProvider(...);
   *** getSkuToken(...);
   *** getTelemetry(...);
   *** getInstance(...);
   *** isConnected(...);
   *** setConnected(...);
}

-keep class com.mapbox.mapboxsdk.LibraryLoaderProvider
-keepclassmembers class com.mapbox.mapboxsdk.LibraryLoaderProvider {
}

-keep class com.mapbox.mapboxsdk.LibraryLoader
-keepclassmembers class com.mapbox.mapboxsdk.LibraryLoader {
   <init>(...);
   *** load(...);
   *** load(...);
   *** setLibraryLoader(...);
}

-keep class com.mapbox.mapboxsdk.LibraryLoader
-keepclassmembers class com.mapbox.mapboxsdk.LibraryLoader {
   *** load(...);
}

-keep class com.mapbox.mapboxsdk.geometry.LatLngSpan
-keepclassmembers class com.mapbox.mapboxsdk.geometry.LatLngSpan {
   <init>(...);
   *** getLatitudeSpan(...);
   *** setLatitudeSpan(...);
   *** getLongitudeSpan(...);
   *** setLongitudeSpan(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.geometry.ProjectedMeters
-keepclassmembers class com.mapbox.mapboxsdk.geometry.ProjectedMeters {
   <init>(...);
   <init>(...);
   *** getEasting(...);
   *** getNorthing(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.geometry.LatLngBounds
-keepclassmembers class com.mapbox.mapboxsdk.geometry.LatLngBounds {
   *** getCenter(...);
   *** isEmptySpan(...);
   *** getLatNorth(...);
   *** getLatSouth(...);
   *** getLatitudeSpan(...);
   *** getLonEast(...);
   *** getLonWest(...);
   *** getLongitudeSpan(...);
   *** getNorthEast(...);
   *** getNorthWest(...);
   *** getSouthEast(...);
   *** getSouthWest(...);
   *** getSpan(...);
   *** contains(...);
   *** contains(...);
   *** describeContents(...);
   *** from(...);
   *** from(...);
   *** include(...);
   *** intersect(...);
   *** intersect(...);
   *** toLatLngs(...);
   *** union(...);
   *** union(...);
   *** world(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.geometry.LatLng
-keepclassmembers class com.mapbox.mapboxsdk.geometry.LatLng {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAltitude(...);
   *** setAltitude(...);
   *** getLatitude(...);
   *** setLatitude(...);
   *** getLongitude(...);
   *** setLongitude(...);
   *** describeContents(...);
   *** distanceTo(...);
   *** wrap(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.geometry.LatLngQuad
-keepclassmembers class com.mapbox.mapboxsdk.geometry.LatLngQuad {
   <init>(...);
   *** getBottomLeft(...);
   *** getBottomRight(...);
   *** getTopLeft(...);
   *** getTopRight(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.geometry.VisibleRegion
-keepclassmembers class com.mapbox.mapboxsdk.geometry.VisibleRegion {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.location.CompassListener
-keepclassmembers class com.mapbox.mapboxsdk.location.CompassListener {
}

-keep class com.mapbox.mapboxsdk.location.OnLocationCameraTransitionListener
-keepclassmembers class com.mapbox.mapboxsdk.location.OnLocationCameraTransitionListener {
}

-keep class com.mapbox.mapboxsdk.location.OnLocationStaleListener
-keepclassmembers class com.mapbox.mapboxsdk.location.OnLocationStaleListener {
}

-keep class mono.com.mapbox.mapboxsdk.location.OnLocationStaleListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.location.OnLocationStaleListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.location.LocationComponentActivationOptions$Builder
-keepclassmembers class com.mapbox.mapboxsdk.location.LocationComponentActivationOptions$Builder {
   <init>(...);
   *** build(...);
   *** locationComponentOptions(...);
   *** locationEngine(...);
   *** locationEngineRequest(...);
   *** styleRes(...);
   *** useDefaultLocationEngine(...);
}

-keep class com.mapbox.mapboxsdk.location.LocationComponentActivationOptions
-keepclassmembers class com.mapbox.mapboxsdk.location.LocationComponentActivationOptions {
   *** builder(...);
   *** context(...);
   *** locationComponentOptions(...);
   *** locationEngine(...);
   *** locationEngineRequest(...);
   *** style(...);
   *** styleRes(...);
   *** useDefaultLocationEngine(...);
}

-keep class com.mapbox.mapboxsdk.location.OnLocationLongClickListener
-keepclassmembers class com.mapbox.mapboxsdk.location.OnLocationLongClickListener {
}

-keep class mono.com.mapbox.mapboxsdk.location.OnLocationLongClickListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.location.OnLocationLongClickListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.location.OnCameraTrackingChangedListener
-keepclassmembers class com.mapbox.mapboxsdk.location.OnCameraTrackingChangedListener {
}

-keep class mono.com.mapbox.mapboxsdk.location.OnCameraTrackingChangedListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.location.OnCameraTrackingChangedListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.location.OnLocationClickListener
-keepclassmembers class com.mapbox.mapboxsdk.location.OnLocationClickListener {
}

-keep class mono.com.mapbox.mapboxsdk.location.OnLocationClickListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.location.OnLocationClickListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.location.LocationComponentOptions$Builder
-keepclassmembers class com.mapbox.mapboxsdk.location.LocationComponentOptions$Builder {
   *** accuracyAlpha(...);
   *** accuracyAnimationEnabled(...);
   *** accuracyColor(...);
   *** backgroundDrawable(...);
   *** backgroundDrawableStale(...);
   *** backgroundName(...);
   *** backgroundStaleName(...);
   *** backgroundStaleTintColor(...);
   *** backgroundTintColor(...);
   *** bearingDrawable(...);
   *** bearingName(...);
   *** bearingTintColor(...);
   *** build(...);
   *** compassAnimationEnabled(...);
   *** elevation(...);
   *** enableStaleState(...);
   *** foregroundDrawable(...);
   *** foregroundDrawableStale(...);
   *** foregroundName(...);
   *** foregroundStaleName(...);
   *** foregroundStaleTintColor(...);
   *** foregroundTintColor(...);
   *** gpsDrawable(...);
   *** gpsName(...);
   *** layerAbove(...);
   *** layerBelow(...);
   *** maxZoomIconScale(...);
   *** minZoomIconScale(...);
   *** padding(...);
   *** staleStateTimeout(...);
   *** trackingAnimationDurationMultiplier(...);
   *** trackingGesturesManagement(...);
   *** trackingInitialMoveThreshold(...);
   *** trackingMultiFingerMoveThreshold(...);
}

-keep class com.mapbox.mapboxsdk.location.LocationComponentOptions
-keepclassmembers class com.mapbox.mapboxsdk.location.LocationComponentOptions {
   *** accuracyAlpha(...);
   *** accuracyAnimationEnabled(...);
   *** accuracyColor(...);
   *** backgroundDrawable(...);
   *** backgroundDrawableStale(...);
   *** backgroundName(...);
   *** backgroundStaleName(...);
   *** backgroundStaleTintColor(...);
   *** backgroundTintColor(...);
   *** bearingDrawable(...);
   *** bearingName(...);
   *** bearingTintColor(...);
   *** builder(...);
   *** compassAnimationEnabled(...);
   *** createFromAttributes(...);
   *** describeContents(...);
   *** elevation(...);
   *** enableStaleState(...);
   *** foregroundDrawable(...);
   *** foregroundDrawableStale(...);
   *** foregroundName(...);
   *** foregroundStaleName(...);
   *** foregroundStaleTintColor(...);
   *** foregroundTintColor(...);
   *** gpsDrawable(...);
   *** gpsName(...);
   *** layerAbove(...);
   *** layerBelow(...);
   *** maxZoomIconScale(...);
   *** minZoomIconScale(...);
   *** padding(...);
   *** staleStateTimeout(...);
   *** toBuilder(...);
   *** trackingAnimationDurationMultiplier(...);
   *** trackingGesturesManagement(...);
   *** trackingInitialMoveThreshold(...);
   *** trackingMultiFingerMoveThreshold(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.location.OnRenderModeChangedListener
-keepclassmembers class com.mapbox.mapboxsdk.location.OnRenderModeChangedListener {
}

-keep class mono.com.mapbox.mapboxsdk.location.OnRenderModeChangedListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.location.OnRenderModeChangedListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.location.LocationComponent
-keepclassmembers class com.mapbox.mapboxsdk.location.LocationComponent {
   <init>(...);
   *** getCameraMode(...);
   *** setCameraMode(...);
   *** getCompassEngine(...);
   *** setCompassEngine(...);
   *** isLocationComponentActivated(...);
   *** getLastKnownLocation(...);
   *** isLocationComponentEnabled(...);
   *** setLocationComponentEnabled(...);
   *** getLocationComponentOptions(...);
   *** getLocationEngine(...);
   *** setLocationEngine(...);
   *** getLocationEngineRequest(...);
   *** setLocationEngineRequest(...);
   *** getRenderMode(...);
   *** setRenderMode(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** activateLocationComponent(...);
   *** addOnCameraTrackingChangedListener(...);
   *** addOnLocationClickListener(...);
   *** addOnLocationLongClickListener(...);
   *** addOnLocationStaleListener(...);
   *** addOnRenderModeChangedListener(...);
   *** applyStyle(...);
   *** applyStyle(...);
   *** cancelTiltWhileTrackingAnimation(...);
   *** cancelZoomWhileTrackingAnimation(...);
   *** forceLocationUpdate(...);
   *** onDestroy(...);
   *** onFinishLoadingStyle(...);
   *** onStart(...);
   *** onStartLoadingMap(...);
   *** onStop(...);
   *** removeOnCameraTrackingChangedListener(...);
   *** removeOnLocationClickListener(...);
   *** removeOnLocationLongClickListener(...);
   *** removeOnLocationStaleListener(...);
   *** removeRenderModeChangedListener(...);
   *** setCameraMode(...);
   *** setCameraMode(...);
   *** setMaxAnimationFps(...);
   *** tiltWhileTracking(...);
   *** tiltWhileTracking(...);
   *** tiltWhileTracking(...);
   *** zoomWhileTracking(...);
   *** zoomWhileTracking(...);
   *** zoomWhileTracking(...);
}

-keep class com.mapbox.mapboxsdk.location.CompassEngine
-keepclassmembers class com.mapbox.mapboxsdk.location.CompassEngine {
}

-keep class com.mapbox.mapboxsdk.camera.CameraUpdate
-keepclassmembers class com.mapbox.mapboxsdk.camera.CameraUpdate {
}

-keep class com.mapbox.mapboxsdk.camera.CameraUpdateFactory$CameraPositionUpdate
-keepclassmembers class com.mapbox.mapboxsdk.camera.CameraUpdateFactory$CameraPositionUpdate {
   *** getBearing(...);
   *** getTarget(...);
   *** getTilt(...);
   *** getZoom(...);
   *** getCameraPosition(...);
}

-keep class com.mapbox.mapboxsdk.camera.CameraUpdateFactory$ZoomUpdate
-keepclassmembers class com.mapbox.mapboxsdk.camera.CameraUpdateFactory$ZoomUpdate {
   *** getType(...);
   *** getZoom(...);
   *** getCameraPosition(...);
   *** getX(...);
   *** getY(...);
}

-keep class com.mapbox.mapboxsdk.camera.CameraUpdateFactory
-keepclassmembers class com.mapbox.mapboxsdk.camera.CameraUpdateFactory {
   <init>(...);
   *** bearingTo(...);
   *** newCameraPosition(...);
   *** newLatLng(...);
   *** newLatLngBounds(...);
   *** newLatLngBounds(...);
   *** newLatLngBounds(...);
   *** newLatLngBounds(...);
   *** newLatLngZoom(...);
   *** tiltTo(...);
   *** zoomBy(...);
   *** zoomBy(...);
   *** zoomIn(...);
   *** zoomOut(...);
   *** zoomTo(...);
}

-keep class com.mapbox.mapboxsdk.camera.CameraPosition$Builder
-keepclassmembers class com.mapbox.mapboxsdk.camera.CameraPosition$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** bearing(...);
   *** build(...);
   *** target(...);
   *** tilt(...);
   *** zoom(...);
}

-keep class com.mapbox.mapboxsdk.camera.CameraPosition
-keepclassmembers class com.mapbox.mapboxsdk.camera.CameraPosition {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.snapshotter.MapSnapshotter$ErrorHandler
-keepclassmembers class com.mapbox.mapboxsdk.snapshotter.MapSnapshotter$ErrorHandler {
}

-keep class com.mapbox.mapboxsdk.snapshotter.MapSnapshotter$Options
-keepclassmembers class com.mapbox.mapboxsdk.snapshotter.MapSnapshotter$Options {
   <init>(...);
   *** getApiBaseUri(...);
   *** getApiBaseUrl(...);
   *** getCameraPosition(...);
   *** getHeight(...);
   *** getLocalIdeographFontFamily(...);
   *** getPixelRatio(...);
   *** getRegion(...);
   *** getStyleUri(...);
   *** getStyleUrl(...);
   *** getWidth(...);
   *** withApiBaseUri(...);
   *** withApiBaseUrl(...);
   *** withCameraPosition(...);
   *** withLocalIdeographFontFamily(...);
   *** withLocalIdeographFontFamily(...);
   *** withLogo(...);
   *** withPixelRatio(...);
   *** withRegion(...);
   *** withStyle(...);
   *** withStyleJson(...);
}

-keep class com.mapbox.mapboxsdk.snapshotter.MapSnapshotter$SnapshotReadyCallback
-keepclassmembers class com.mapbox.mapboxsdk.snapshotter.MapSnapshotter$SnapshotReadyCallback {
}

-keep class com.mapbox.mapboxsdk.snapshotter.MapSnapshotter
-keepclassmembers class com.mapbox.mapboxsdk.snapshotter.MapSnapshotter {
   <init>(...);
   *** addOverlay(...);
   *** cancel(...);
   *** nativeCancel(...);
   *** nativeInitialize(...);
   *** nativeStart(...);
   *** onSnapshotFailed(...);
   *** onSnapshotReady(...);
   *** reset(...);
   *** setCameraPosition(...);
   *** setRegion(...);
   *** setSize(...);
   *** setStyleJson(...);
   *** setStyleUrl(...);
   *** start(...);
   *** start(...);
}

-keep class com.mapbox.mapboxsdk.snapshotter.MapSnapshot
-keepclassmembers class com.mapbox.mapboxsdk.snapshotter.MapSnapshot {
   *** getBitmap(...);
   *** getAttributions(...);
   *** latLngForPixel(...);
   *** pixelForLatLng(...);
}

-keep class com.mapbox.mapboxsdk.offline.OfflineRegionDefinition
-keepclassmembers class com.mapbox.mapboxsdk.offline.OfflineRegionDefinition {
}

-keep class com.mapbox.mapboxsdk.storage.FileSource$ResourceTransformCallback
-keepclassmembers class com.mapbox.mapboxsdk.storage.FileSource$ResourceTransformCallback {
}

-keep class com.mapbox.mapboxsdk.storage.FileSource$ResourcesCachePathChangeCallback
-keepclassmembers class com.mapbox.mapboxsdk.storage.FileSource$ResourcesCachePathChangeCallback {
}

-keep class com.mapbox.mapboxsdk.storage.FileSource
-keepclassmembers class com.mapbox.mapboxsdk.storage.FileSource {
   *** getAccessToken(...);
   *** setAccessToken(...);
   *** isActivated(...);
   *** isExternalStorageReadable(...);
   *** activate(...);
   *** deactivate(...);
   *** getInstance(...);
   *** getInternalCachePath(...);
   *** getResourcesCachePath(...);
   *** initializeFileDirsPaths(...);
   *** setApiBaseUrl(...);
   *** setResourceTransform(...);
   *** setResourcesCachePath(...);
   *** setResourcesCachePath(...);
}

-keep class com.mapbox.mapboxsdk.http.HttpRequest
-keepclassmembers class com.mapbox.mapboxsdk.http.HttpRequest {
}

-keep class com.mapbox.mapboxsdk.http.HttpResponder
-keepclassmembers class com.mapbox.mapboxsdk.http.HttpResponder {
}

-keep class com.mapbox.mapboxsdk.style.expressions.Expression$FormatEntry
-keepclassmembers class com.mapbox.mapboxsdk.style.expressions.Expression$FormatEntry {
}

-keep class com.mapbox.mapboxsdk.style.expressions.Expression$FormatOption
-keepclassmembers class com.mapbox.mapboxsdk.style.expressions.Expression$FormatOption {
   *** formatFontScale(...);
   *** formatFontScale(...);
   *** formatTextColor(...);
   *** formatTextColor(...);
   *** formatTextFont(...);
   *** formatTextFont(...);
}

-keep class com.mapbox.mapboxsdk.style.expressions.Expression$Interpolator
-keepclassmembers class com.mapbox.mapboxsdk.style.expressions.Expression$Interpolator {
}

-keep class com.mapbox.mapboxsdk.style.expressions.Expression$Stop
-keepclassmembers class com.mapbox.mapboxsdk.style.expressions.Expression$Stop {
}

-keep class com.mapbox.mapboxsdk.style.expressions.Expression
-keepclassmembers class com.mapbox.mapboxsdk.style.expressions.Expression {
   <init>(...);
   *** abs(...);
   *** abs(...);
   *** acos(...);
   *** acos(...);
   *** all(...);
   *** any(...);
   *** array(...);
   *** asin(...);
   *** asin(...);
   *** at(...);
   *** at(...);
   *** atan(...);
   *** atan(...);
   *** bool(...);
   *** ceil(...);
   *** ceil(...);
   *** coalesce(...);
   *** collator(...);
   *** collator(...);
   *** collator(...);
   *** collator(...);
   *** color(...);
   *** concat(...);
   *** concat(...);
   *** cos(...);
   *** cos(...);
   *** cubicBezier(...);
   *** cubicBezier(...);
   *** division(...);
   *** division(...);
   *** downcase(...);
   *** downcase(...);
   *** e(...);
   *** eq(...);
   *** eq(...);
   *** eq(...);
   *** eq(...);
   *** eq(...);
   *** eq(...);
   *** exponential(...);
   *** exponential(...);
   *** floor(...);
   *** floor(...);
   *** format(...);
   *** formatEntry(...);
   *** formatEntry(...);
   *** formatEntry(...);
   *** formatEntry(...);
   *** geometryType(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** gt(...);
   *** gt(...);
   *** gt(...);
   *** gt(...);
   *** gt(...);
   *** gte(...);
   *** gte(...);
   *** gte(...);
   *** gte(...);
   *** gte(...);
   *** has(...);
   *** has(...);
   *** has(...);
   *** has(...);
   *** heatmapDensity(...);
   *** id(...);
   *** interpolate(...);
   *** interpolate(...);
   *** isSupportedScript(...);
   *** isSupportedScript(...);
   *** length(...);
   *** length(...);
   *** let(...);
   *** lineProgress(...);
   *** linear(...);
   *** literal(...);
   *** literal(...);
   *** literal(...);
   *** literal(...);
   *** literal(...);
   *** ln2(...);
   *** ln(...);
   *** ln(...);
   *** log10(...);
   *** log10(...);
   *** log2(...);
   *** log2(...);
   *** lt(...);
   *** lt(...);
   *** lt(...);
   *** lt(...);
   *** lt(...);
   *** lte(...);
   *** lte(...);
   *** lte(...);
   *** lte(...);
   *** lte(...);
   *** match(...);
   *** match(...);
   *** max(...);
   *** max(...);
   *** min(...);
   *** min(...);
   *** mod(...);
   *** mod(...);
   *** neq(...);
   *** neq(...);
   *** neq(...);
   *** neq(...);
   *** neq(...);
   *** neq(...);
   *** not(...);
   *** not(...);
   *** number(...);
   *** object(...);
   *** pi(...);
   *** pow(...);
   *** pow(...);
   *** product(...);
   *** product(...);
   *** properties(...);
   *** raw(...);
   *** resolvedLocale(...);
   *** rgb(...);
   *** rgb(...);
   *** rgba(...);
   *** rgba(...);
   *** round(...);
   *** round(...);
   *** sin(...);
   *** sin(...);
   *** sqrt(...);
   *** sqrt(...);
   *** step(...);
   *** step(...);
   *** step(...);
   *** step(...);
   *** step(...);
   *** step(...);
   *** step(...);
   *** step(...);
   *** stop(...);
   *** string(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** sum(...);
   *** sum(...);
   *** switchCase(...);
   *** tan(...);
   *** tan(...);
   *** toArray(...);
   *** toBool(...);
   *** toColor(...);
   *** toNumber(...);
   *** toRgba(...);
   *** toString(...);
   *** typeOf(...);
   *** upcase(...);
   *** upcase(...);
   *** var(...);
   *** var(...);
   *** zoom(...);
}

-keep class com.mapbox.mapboxsdk.style.types.Formatted
-keepclassmembers class com.mapbox.mapboxsdk.style.types.Formatted {
   <init>(...);
   *** getFormattedSections(...);
   *** toArray(...);
}

-keep class com.mapbox.mapboxsdk.style.types.FormattedSection
-keepclassmembers class com.mapbox.mapboxsdk.style.types.FormattedSection {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getFontScale(...);
   *** setFontScale(...);
   *** getText(...);
   *** getTextColor(...);
   *** setTextColor(...);
   *** getFontStack(...);
   *** setFontStack(...);
   *** setTextColor(...);
}

-keep class com.mapbox.mapboxsdk.style.light.Position
-keepclassmembers class com.mapbox.mapboxsdk.style.light.Position {
   <init>(...);
   *** fromPosition(...);
}

-keep class com.mapbox.mapboxsdk.style.light.Light
-keepclassmembers class com.mapbox.mapboxsdk.style.light.Light {
   *** getAnchor(...);
   *** setAnchor(...);
   *** getColor(...);
   *** setColor(...);
   *** getColorTransition(...);
   *** setColorTransition(...);
   *** getIntensity(...);
   *** setIntensity(...);
   *** getIntensityTransition(...);
   *** setIntensityTransition(...);
   *** getPosition(...);
   *** setPosition(...);
   *** getPositionTransition(...);
   *** setPositionTransition(...);
   *** setColor(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.CircleLayer
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.CircleLayer {
   <init>(...);
   *** getCircleBlur(...);
   *** getCircleBlurTransition(...);
   *** setCircleBlurTransition(...);
   *** getCircleColor(...);
   *** getCircleColorAsInt(...);
   *** getCircleColorTransition(...);
   *** setCircleColorTransition(...);
   *** getCircleOpacity(...);
   *** getCircleOpacityTransition(...);
   *** setCircleOpacityTransition(...);
   *** getCirclePitchAlignment(...);
   *** getCirclePitchScale(...);
   *** getCircleRadius(...);
   *** getCircleRadiusTransition(...);
   *** setCircleRadiusTransition(...);
   *** getCircleStrokeColor(...);
   *** getCircleStrokeColorAsInt(...);
   *** getCircleStrokeColorTransition(...);
   *** setCircleStrokeColorTransition(...);
   *** getCircleStrokeOpacity(...);
   *** getCircleStrokeOpacityTransition(...);
   *** setCircleStrokeOpacityTransition(...);
   *** getCircleStrokeWidth(...);
   *** getCircleStrokeWidthTransition(...);
   *** setCircleStrokeWidthTransition(...);
   *** getCircleTranslate(...);
   *** getCircleTranslateAnchor(...);
   *** getCircleTranslateTransition(...);
   *** setCircleTranslateTransition(...);
   *** getFilter(...);
   *** setFilter(...);
   *** getSourceId(...);
   *** getSourceLayer(...);
   *** setSourceLayer(...);
   *** initialize(...);
   *** withFilter(...);
   *** withProperties(...);
   *** withSourceLayer(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.LineLayer
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.LineLayer {
   <init>(...);
   *** getFilter(...);
   *** setFilter(...);
   *** getLineBlur(...);
   *** getLineBlurTransition(...);
   *** setLineBlurTransition(...);
   *** getLineCap(...);
   *** getLineColor(...);
   *** getLineColorAsInt(...);
   *** getLineColorTransition(...);
   *** setLineColorTransition(...);
   *** getLineDasharray(...);
   *** getLineDasharrayTransition(...);
   *** setLineDasharrayTransition(...);
   *** getLineGapWidth(...);
   *** getLineGapWidthTransition(...);
   *** setLineGapWidthTransition(...);
   *** getLineGradient(...);
   *** getLineGradientAsInt(...);
   *** getLineJoin(...);
   *** getLineMiterLimit(...);
   *** getLineOffset(...);
   *** getLineOffsetTransition(...);
   *** setLineOffsetTransition(...);
   *** getLineOpacity(...);
   *** getLineOpacityTransition(...);
   *** setLineOpacityTransition(...);
   *** getLinePattern(...);
   *** getLinePatternTransition(...);
   *** setLinePatternTransition(...);
   *** getLineRoundLimit(...);
   *** getLineTranslate(...);
   *** getLineTranslateAnchor(...);
   *** getLineTranslateTransition(...);
   *** setLineTranslateTransition(...);
   *** getLineWidth(...);
   *** getLineWidthTransition(...);
   *** setLineWidthTransition(...);
   *** getSourceId(...);
   *** getSourceLayer(...);
   *** setSourceLayer(...);
   *** initialize(...);
   *** withFilter(...);
   *** withProperties(...);
   *** withSourceLayer(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.PropertyFactory
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.PropertyFactory {
   <init>(...);
   *** backgroundColor(...);
   *** backgroundColor(...);
   *** backgroundColor(...);
   *** backgroundOpacity(...);
   *** backgroundOpacity(...);
   *** backgroundPattern(...);
   *** backgroundPattern(...);
   *** circleBlur(...);
   *** circleBlur(...);
   *** circleColor(...);
   *** circleColor(...);
   *** circleColor(...);
   *** circleOpacity(...);
   *** circleOpacity(...);
   *** circlePitchAlignment(...);
   *** circlePitchAlignment(...);
   *** circlePitchScale(...);
   *** circlePitchScale(...);
   *** circleRadius(...);
   *** circleRadius(...);
   *** circleStrokeColor(...);
   *** circleStrokeColor(...);
   *** circleStrokeColor(...);
   *** circleStrokeOpacity(...);
   *** circleStrokeOpacity(...);
   *** circleStrokeWidth(...);
   *** circleStrokeWidth(...);
   *** circleTranslate(...);
   *** circleTranslate(...);
   *** circleTranslateAnchor(...);
   *** circleTranslateAnchor(...);
   *** fillAntialias(...);
   *** fillAntialias(...);
   *** fillColor(...);
   *** fillColor(...);
   *** fillColor(...);
   *** fillExtrusionBase(...);
   *** fillExtrusionBase(...);
   *** fillExtrusionColor(...);
   *** fillExtrusionColor(...);
   *** fillExtrusionColor(...);
   *** fillExtrusionHeight(...);
   *** fillExtrusionHeight(...);
   *** fillExtrusionOpacity(...);
   *** fillExtrusionOpacity(...);
   *** fillExtrusionPattern(...);
   *** fillExtrusionPattern(...);
   *** fillExtrusionTranslate(...);
   *** fillExtrusionTranslate(...);
   *** fillExtrusionTranslateAnchor(...);
   *** fillExtrusionTranslateAnchor(...);
   *** fillExtrusionVerticalGradient(...);
   *** fillExtrusionVerticalGradient(...);
   *** fillOpacity(...);
   *** fillOpacity(...);
   *** fillOutlineColor(...);
   *** fillOutlineColor(...);
   *** fillOutlineColor(...);
   *** fillPattern(...);
   *** fillPattern(...);
   *** fillTranslate(...);
   *** fillTranslate(...);
   *** fillTranslateAnchor(...);
   *** fillTranslateAnchor(...);
   *** heatmapColor(...);
   *** heatmapColor(...);
   *** heatmapColor(...);
   *** heatmapIntensity(...);
   *** heatmapIntensity(...);
   *** heatmapOpacity(...);
   *** heatmapOpacity(...);
   *** heatmapRadius(...);
   *** heatmapRadius(...);
   *** heatmapWeight(...);
   *** heatmapWeight(...);
   *** hillshadeAccentColor(...);
   *** hillshadeAccentColor(...);
   *** hillshadeAccentColor(...);
   *** hillshadeExaggeration(...);
   *** hillshadeExaggeration(...);
   *** hillshadeHighlightColor(...);
   *** hillshadeHighlightColor(...);
   *** hillshadeHighlightColor(...);
   *** hillshadeIlluminationAnchor(...);
   *** hillshadeIlluminationAnchor(...);
   *** hillshadeIlluminationDirection(...);
   *** hillshadeIlluminationDirection(...);
   *** hillshadeShadowColor(...);
   *** hillshadeShadowColor(...);
   *** hillshadeShadowColor(...);
   *** iconAllowOverlap(...);
   *** iconAllowOverlap(...);
   *** iconAnchor(...);
   *** iconAnchor(...);
   *** iconColor(...);
   *** iconColor(...);
   *** iconColor(...);
   *** iconHaloBlur(...);
   *** iconHaloBlur(...);
   *** iconHaloColor(...);
   *** iconHaloColor(...);
   *** iconHaloColor(...);
   *** iconHaloWidth(...);
   *** iconHaloWidth(...);
   *** iconIgnorePlacement(...);
   *** iconIgnorePlacement(...);
   *** iconImage(...);
   *** iconImage(...);
   *** iconKeepUpright(...);
   *** iconKeepUpright(...);
   *** iconOffset(...);
   *** iconOffset(...);
   *** iconOpacity(...);
   *** iconOpacity(...);
   *** iconOptional(...);
   *** iconOptional(...);
   *** iconPadding(...);
   *** iconPadding(...);
   *** iconPitchAlignment(...);
   *** iconPitchAlignment(...);
   *** iconRotate(...);
   *** iconRotate(...);
   *** iconRotationAlignment(...);
   *** iconRotationAlignment(...);
   *** iconSize(...);
   *** iconSize(...);
   *** iconTextFit(...);
   *** iconTextFit(...);
   *** iconTextFitPadding(...);
   *** iconTextFitPadding(...);
   *** iconTranslate(...);
   *** iconTranslate(...);
   *** iconTranslateAnchor(...);
   *** iconTranslateAnchor(...);
   *** lineBlur(...);
   *** lineBlur(...);
   *** lineCap(...);
   *** lineCap(...);
   *** lineColor(...);
   *** lineColor(...);
   *** lineColor(...);
   *** lineDasharray(...);
   *** lineDasharray(...);
   *** lineGapWidth(...);
   *** lineGapWidth(...);
   *** lineGradient(...);
   *** lineGradient(...);
   *** lineGradient(...);
   *** lineJoin(...);
   *** lineJoin(...);
   *** lineMiterLimit(...);
   *** lineMiterLimit(...);
   *** lineOffset(...);
   *** lineOffset(...);
   *** lineOpacity(...);
   *** lineOpacity(...);
   *** linePattern(...);
   *** linePattern(...);
   *** lineRoundLimit(...);
   *** lineRoundLimit(...);
   *** lineTranslate(...);
   *** lineTranslate(...);
   *** lineTranslateAnchor(...);
   *** lineTranslateAnchor(...);
   *** lineWidth(...);
   *** lineWidth(...);
   *** rasterBrightnessMax(...);
   *** rasterBrightnessMax(...);
   *** rasterBrightnessMin(...);
   *** rasterBrightnessMin(...);
   *** rasterContrast(...);
   *** rasterContrast(...);
   *** rasterFadeDuration(...);
   *** rasterFadeDuration(...);
   *** rasterHueRotate(...);
   *** rasterHueRotate(...);
   *** rasterOpacity(...);
   *** rasterOpacity(...);
   *** rasterResampling(...);
   *** rasterResampling(...);
   *** rasterSaturation(...);
   *** rasterSaturation(...);
   *** symbolAvoidEdges(...);
   *** symbolAvoidEdges(...);
   *** symbolPlacement(...);
   *** symbolPlacement(...);
   *** symbolSortKey(...);
   *** symbolSortKey(...);
   *** symbolSpacing(...);
   *** symbolSpacing(...);
   *** symbolZOrder(...);
   *** symbolZOrder(...);
   *** textAllowOverlap(...);
   *** textAllowOverlap(...);
   *** textAnchor(...);
   *** textAnchor(...);
   *** textColor(...);
   *** textColor(...);
   *** textColor(...);
   *** textField(...);
   *** textField(...);
   *** textField(...);
   *** textFont(...);
   *** textFont(...);
   *** textHaloBlur(...);
   *** textHaloBlur(...);
   *** textHaloColor(...);
   *** textHaloColor(...);
   *** textHaloColor(...);
   *** textHaloWidth(...);
   *** textHaloWidth(...);
   *** textIgnorePlacement(...);
   *** textIgnorePlacement(...);
   *** textJustify(...);
   *** textJustify(...);
   *** textKeepUpright(...);
   *** textKeepUpright(...);
   *** textLetterSpacing(...);
   *** textLetterSpacing(...);
   *** textLineHeight(...);
   *** textLineHeight(...);
   *** textMaxAngle(...);
   *** textMaxAngle(...);
   *** textMaxWidth(...);
   *** textMaxWidth(...);
   *** textOffset(...);
   *** textOffset(...);
   *** textOpacity(...);
   *** textOpacity(...);
   *** textOptional(...);
   *** textOptional(...);
   *** textPadding(...);
   *** textPadding(...);
   *** textPitchAlignment(...);
   *** textPitchAlignment(...);
   *** textRadialOffset(...);
   *** textRadialOffset(...);
   *** textRotate(...);
   *** textRotate(...);
   *** textRotationAlignment(...);
   *** textRotationAlignment(...);
   *** textSize(...);
   *** textSize(...);
   *** textTransform(...);
   *** textTransform(...);
   *** textTranslate(...);
   *** textTranslate(...);
   *** textTranslateAnchor(...);
   *** textTranslateAnchor(...);
   *** textVariableAnchor(...);
   *** textVariableAnchor(...);
   *** textWritingMode(...);
   *** textWritingMode(...);
   *** visibility(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.PropertyValue
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.PropertyValue {
   <init>(...);
   *** getColorInt(...);
   *** getExpression(...);
   *** isExpression(...);
   *** isNull(...);
   *** isValue(...);
   *** getValue(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer {
   <init>(...);
   *** getFillExtrusionBase(...);
   *** getFillExtrusionBaseTransition(...);
   *** setFillExtrusionBaseTransition(...);
   *** getFillExtrusionColor(...);
   *** getFillExtrusionColorAsInt(...);
   *** getFillExtrusionColorTransition(...);
   *** setFillExtrusionColorTransition(...);
   *** getFillExtrusionHeight(...);
   *** getFillExtrusionHeightTransition(...);
   *** setFillExtrusionHeightTransition(...);
   *** getFillExtrusionOpacity(...);
   *** getFillExtrusionOpacityTransition(...);
   *** setFillExtrusionOpacityTransition(...);
   *** getFillExtrusionPattern(...);
   *** getFillExtrusionPatternTransition(...);
   *** setFillExtrusionPatternTransition(...);
   *** getFillExtrusionTranslate(...);
   *** getFillExtrusionTranslateAnchor(...);
   *** getFillExtrusionTranslateTransition(...);
   *** setFillExtrusionTranslateTransition(...);
   *** getFillExtrusionVerticalGradient(...);
   *** getFilter(...);
   *** setFilter(...);
   *** getSourceId(...);
   *** getSourceLayer(...);
   *** setSourceLayer(...);
   *** initialize(...);
   *** withFilter(...);
   *** withProperties(...);
   *** withSourceLayer(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.FillLayer
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.FillLayer {
   <init>(...);
   *** getFillAntialias(...);
   *** getFillColor(...);
   *** getFillColorAsInt(...);
   *** getFillColorTransition(...);
   *** setFillColorTransition(...);
   *** getFillOpacity(...);
   *** getFillOpacityTransition(...);
   *** setFillOpacityTransition(...);
   *** getFillOutlineColor(...);
   *** getFillOutlineColorAsInt(...);
   *** getFillOutlineColorTransition(...);
   *** setFillOutlineColorTransition(...);
   *** getFillPattern(...);
   *** getFillPatternTransition(...);
   *** setFillPatternTransition(...);
   *** getFillTranslate(...);
   *** getFillTranslateAnchor(...);
   *** getFillTranslateTransition(...);
   *** setFillTranslateTransition(...);
   *** getFilter(...);
   *** setFilter(...);
   *** getSourceId(...);
   *** getSourceLayer(...);
   *** setSourceLayer(...);
   *** initialize(...);
   *** withFilter(...);
   *** withProperties(...);
   *** withSourceLayer(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.RasterLayer
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.RasterLayer {
   <init>(...);
   *** getRasterBrightnessMax(...);
   *** getRasterBrightnessMaxTransition(...);
   *** setRasterBrightnessMaxTransition(...);
   *** getRasterBrightnessMin(...);
   *** getRasterBrightnessMinTransition(...);
   *** setRasterBrightnessMinTransition(...);
   *** getRasterContrast(...);
   *** getRasterContrastTransition(...);
   *** setRasterContrastTransition(...);
   *** getRasterFadeDuration(...);
   *** getRasterHueRotate(...);
   *** getRasterHueRotateTransition(...);
   *** setRasterHueRotateTransition(...);
   *** getRasterOpacity(...);
   *** getRasterOpacityTransition(...);
   *** setRasterOpacityTransition(...);
   *** getRasterResampling(...);
   *** getRasterSaturation(...);
   *** getRasterSaturationTransition(...);
   *** setRasterSaturationTransition(...);
   *** getSourceId(...);
   *** initialize(...);
   *** setSourceLayer(...);
   *** withProperties(...);
   *** withSourceLayer(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.TransitionOptions
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.TransitionOptions {
   <init>(...);
   <init>(...);
   *** getDelay(...);
   *** getDuration(...);
   *** isEnablePlacementTransitions(...);
   *** fromTransitionOptions(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.HillshadeLayer
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.HillshadeLayer {
   <init>(...);
   *** getHillshadeAccentColor(...);
   *** getHillshadeAccentColorAsInt(...);
   *** getHillshadeAccentColorTransition(...);
   *** setHillshadeAccentColorTransition(...);
   *** getHillshadeExaggeration(...);
   *** getHillshadeExaggerationTransition(...);
   *** setHillshadeExaggerationTransition(...);
   *** getHillshadeHighlightColor(...);
   *** getHillshadeHighlightColorAsInt(...);
   *** getHillshadeHighlightColorTransition(...);
   *** setHillshadeHighlightColorTransition(...);
   *** getHillshadeIlluminationAnchor(...);
   *** getHillshadeIlluminationDirection(...);
   *** getHillshadeShadowColor(...);
   *** getHillshadeShadowColorAsInt(...);
   *** getHillshadeShadowColorTransition(...);
   *** setHillshadeShadowColorTransition(...);
   *** getSourceId(...);
   *** initialize(...);
   *** setSourceLayer(...);
   *** withProperties(...);
   *** withSourceLayer(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.HeatmapLayer
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.HeatmapLayer {
   <init>(...);
   *** getFilter(...);
   *** setFilter(...);
   *** getHeatmapColor(...);
   *** getHeatmapColorAsInt(...);
   *** getHeatmapIntensity(...);
   *** getHeatmapIntensityTransition(...);
   *** setHeatmapIntensityTransition(...);
   *** getHeatmapOpacity(...);
   *** getHeatmapOpacityTransition(...);
   *** setHeatmapOpacityTransition(...);
   *** getHeatmapRadius(...);
   *** getHeatmapRadiusTransition(...);
   *** setHeatmapRadiusTransition(...);
   *** getHeatmapWeight(...);
   *** getSourceId(...);
   *** getSourceLayer(...);
   *** setSourceLayer(...);
   *** initialize(...);
   *** withFilter(...);
   *** withProperties(...);
   *** withSourceLayer(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.SymbolLayer
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.SymbolLayer {
   <init>(...);
   *** getFilter(...);
   *** setFilter(...);
   *** getIconAllowOverlap(...);
   *** getIconAnchor(...);
   *** getIconColor(...);
   *** getIconColorAsInt(...);
   *** getIconColorTransition(...);
   *** setIconColorTransition(...);
   *** getIconHaloBlur(...);
   *** getIconHaloBlurTransition(...);
   *** setIconHaloBlurTransition(...);
   *** getIconHaloColor(...);
   *** getIconHaloColorAsInt(...);
   *** getIconHaloColorTransition(...);
   *** setIconHaloColorTransition(...);
   *** getIconHaloWidth(...);
   *** getIconHaloWidthTransition(...);
   *** setIconHaloWidthTransition(...);
   *** getIconIgnorePlacement(...);
   *** getIconImage(...);
   *** getIconKeepUpright(...);
   *** getIconOffset(...);
   *** getIconOpacity(...);
   *** getIconOpacityTransition(...);
   *** setIconOpacityTransition(...);
   *** getIconOptional(...);
   *** getIconPadding(...);
   *** getIconPitchAlignment(...);
   *** getIconRotate(...);
   *** getIconRotationAlignment(...);
   *** getIconSize(...);
   *** getIconTextFit(...);
   *** getIconTextFitPadding(...);
   *** getIconTranslate(...);
   *** getIconTranslateAnchor(...);
   *** getIconTranslateTransition(...);
   *** setIconTranslateTransition(...);
   *** getSourceId(...);
   *** getSourceLayer(...);
   *** setSourceLayer(...);
   *** getSymbolAvoidEdges(...);
   *** getSymbolPlacement(...);
   *** getSymbolSortKey(...);
   *** getSymbolSpacing(...);
   *** getSymbolZOrder(...);
   *** getTextAllowOverlap(...);
   *** getTextAnchor(...);
   *** getTextColor(...);
   *** getTextColorAsInt(...);
   *** getTextColorTransition(...);
   *** setTextColorTransition(...);
   *** getTextField(...);
   *** getTextFont(...);
   *** getTextHaloBlur(...);
   *** getTextHaloBlurTransition(...);
   *** setTextHaloBlurTransition(...);
   *** getTextHaloColor(...);
   *** getTextHaloColorAsInt(...);
   *** getTextHaloColorTransition(...);
   *** setTextHaloColorTransition(...);
   *** getTextHaloWidth(...);
   *** getTextHaloWidthTransition(...);
   *** setTextHaloWidthTransition(...);
   *** getTextIgnorePlacement(...);
   *** getTextJustify(...);
   *** getTextKeepUpright(...);
   *** getTextLetterSpacing(...);
   *** getTextLineHeight(...);
   *** getTextMaxAngle(...);
   *** getTextMaxWidth(...);
   *** getTextOffset(...);
   *** getTextOpacity(...);
   *** getTextOpacityTransition(...);
   *** setTextOpacityTransition(...);
   *** getTextOptional(...);
   *** getTextPadding(...);
   *** getTextPitchAlignment(...);
   *** getTextRadialOffset(...);
   *** getTextRotate(...);
   *** getTextRotationAlignment(...);
   *** getTextSize(...);
   *** getTextTransform(...);
   *** getTextTranslate(...);
   *** getTextTranslateAnchor(...);
   *** getTextTranslateTransition(...);
   *** setTextTranslateTransition(...);
   *** getTextVariableAnchor(...);
   *** getTextWritingMode(...);
   *** initialize(...);
   *** withFilter(...);
   *** withProperties(...);
   *** withSourceLayer(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.Layer
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.Layer {
   <init>(...);
   <init>(...);
   *** getId(...);
   *** isDetached(...);
   *** getMaxZoom(...);
   *** setMaxZoom(...);
   *** getMinZoom(...);
   *** setMinZoom(...);
   *** getNativePtr(...);
   *** getVisibility(...);
   *** checkThread(...);
   *** nativeGetFilter(...);
   *** nativeGetId(...);
   *** nativeGetMaxZoom(...);
   *** nativeGetMinZoom(...);
   *** nativeGetSourceId(...);
   *** nativeGetSourceLayer(...);
   *** nativeGetVisibility(...);
   *** nativeSetFilter(...);
   *** nativeSetLayoutProperty(...);
   *** nativeSetMaxZoom(...);
   *** nativeSetMinZoom(...);
   *** nativeSetPaintProperty(...);
   *** nativeSetSourceLayer(...);
   *** setDetached(...);
   *** setProperties(...);
}

-keep class com.mapbox.mapboxsdk.style.layers.Layer
-keepclassmembers class com.mapbox.mapboxsdk.style.layers.Layer {
}

-keep class com.mapbox.mapboxsdk.style.sources.TileSet
-keepclassmembers class com.mapbox.mapboxsdk.style.sources.TileSet {
   <init>(...);
   *** getAttribution(...);
   *** setAttribution(...);
   *** getDescription(...);
   *** setDescription(...);
   *** getEncoding(...);
   *** setEncoding(...);
   *** getLegend(...);
   *** setLegend(...);
   *** getMaxZoom(...);
   *** setMaxZoom(...);
   *** getMinZoom(...);
   *** setMinZoom(...);
   *** getName(...);
   *** setName(...);
   *** getScheme(...);
   *** setScheme(...);
   *** getTemplate(...);
   *** setTemplate(...);
   *** getTilejson(...);
   *** getVersion(...);
   *** setVersion(...);
   *** getBounds(...);
   *** getCenter(...);
   *** getData(...);
   *** getGrids(...);
   *** getTiles(...);
   *** setBounds(...);
   *** setCenter(...);
   *** setCenter(...);
   *** setData(...);
   *** setGrids(...);
}

-keep class com.mapbox.mapboxsdk.style.sources.RasterSource
-keepclassmembers class com.mapbox.mapboxsdk.style.sources.RasterSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** getUrl(...);
   *** initialize(...);
   *** nativeGetUrl(...);
}

-keep class com.mapbox.mapboxsdk.style.sources.ImageSource
-keepclassmembers class com.mapbox.mapboxsdk.style.sources.ImageSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** setUri(...);
   *** getUrl(...);
   *** setUrl(...);
   *** initialize(...);
   *** nativeGetUrl(...);
   *** nativeSetCoordinates(...);
   *** nativeSetImage(...);
   *** nativeSetUrl(...);
   *** setCoordinates(...);
   *** setImage(...);
   *** setImage(...);
   *** setUri(...);
   *** setUrl(...);
}

-keep class com.mapbox.mapboxsdk.style.sources.GeoJsonSource
-keepclassmembers class com.mapbox.mapboxsdk.style.sources.GeoJsonSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** setUri(...);
   *** getUrl(...);
   *** setUrl(...);
   *** getClusterChildren(...);
   *** getClusterExpansionZoom(...);
   *** getClusterLeaves(...);
   *** initialize(...);
   *** nativeGetUrl(...);
   *** nativeSetUrl(...);
   *** querySourceFeatures(...);
   *** setGeoJson(...);
   *** setGeoJson(...);
   *** setGeoJson(...);
   *** setGeoJson(...);
   *** setUri(...);
   *** setUrl(...);
}

-keep class com.mapbox.mapboxsdk.style.sources.RasterDemSource
-keepclassmembers class com.mapbox.mapboxsdk.style.sources.RasterDemSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** getUrl(...);
   *** initialize(...);
   *** nativeGetUrl(...);
}

-keep class com.mapbox.mapboxsdk.style.sources.GeoJsonOptions
-keepclassmembers class com.mapbox.mapboxsdk.style.sources.GeoJsonOptions {
   <init>(...);
   *** withBuffer(...);
   *** withCluster(...);
   *** withClusterMaxZoom(...);
   *** withClusterRadius(...);
   *** withLineMetrics(...);
   *** withMaxZoom(...);
   *** withMinZoom(...);
   *** withTolerance(...);
}

-keep class com.mapbox.mapboxsdk.style.sources.VectorSource
-keepclassmembers class com.mapbox.mapboxsdk.style.sources.VectorSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** getUrl(...);
   *** initialize(...);
   *** nativeGetUrl(...);
   *** querySourceFeatures(...);
}

-keep class com.mapbox.mapboxsdk.style.sources.Source
-keepclassmembers class com.mapbox.mapboxsdk.style.sources.Source {
   <init>(...);
   <init>(...);
   *** getAttribution(...);
   *** getId(...);
   *** getNativePtr(...);
   *** checkThread(...);
   *** nativeGetAttribution(...);
   *** nativeGetId(...);
   *** setDetached(...);
}

-keep class com.mapbox.mapboxsdk.style.sources.Source
-keepclassmembers class com.mapbox.mapboxsdk.style.sources.Source {
}

-keep class com.mapbox.mapboxsdk.maps.AttributionDialogManager
-keepclassmembers class com.mapbox.mapboxsdk.maps.AttributionDialogManager {
   <init>(...);
   *** onClick(...);
   *** onClick(...);
   *** onStop(...);
   *** showAttributionDialog(...);
}

-keep class com.mapbox.mapboxsdk.maps.Transform
-keepclassmembers class com.mapbox.mapboxsdk.maps.Transform {
   *** getCameraPosition(...);
   *** animateCamera(...);
   *** moveCamera(...);
   *** onCameraDidChange(...);
}

-keep class com.mapbox.mapboxsdk.maps.Style$Builder
-keepclassmembers class com.mapbox.mapboxsdk.maps.Style$Builder {
   <init>(...);
   *** fromJson(...);
   *** fromUri(...);
   *** fromUrl(...);
   *** withBitmapImages(...);
   *** withBitmapImages(...);
   *** withDrawableImages(...);
   *** withDrawableImages(...);
   *** withImage(...);
   *** withImage(...);
   *** withImage(...);
   *** withImage(...);
   *** withLayer(...);
   *** withLayerAbove(...);
   *** withLayerAt(...);
   *** withLayerBelow(...);
   *** withLayers(...);
   *** withSource(...);
   *** withSources(...);
   *** withTransition(...);
}

-keep class com.mapbox.mapboxsdk.maps.Style$OnStyleLoaded
-keepclassmembers class com.mapbox.mapboxsdk.maps.Style$OnStyleLoaded {
}

-keep class com.mapbox.mapboxsdk.maps.Style
-keepclassmembers class com.mapbox.mapboxsdk.maps.Style {
   *** isFullyLoaded(...);
   *** getJson(...);
   *** getLayers(...);
   *** getLight(...);
   *** getSources(...);
   *** getTransition(...);
   *** setTransition(...);
   *** getUri(...);
   *** getUrl(...);
   *** addImage(...);
   *** addImage(...);
   *** addImage(...);
   *** addImageAsync(...);
   *** addImageAsync(...);
   *** addImageAsync(...);
   *** addImages(...);
   *** addImages(...);
   *** addImagesAsync(...);
   *** addImagesAsync(...);
   *** addLayer(...);
   *** addLayerAbove(...);
   *** addLayerAt(...);
   *** addLayerBelow(...);
   *** addSource(...);
   *** getImage(...);
   *** getLayer(...);
   *** getLayerAs(...);
   *** getSource(...);
   *** getSourceAs(...);
   *** removeImage(...);
   *** removeLayer(...);
   *** removeLayer(...);
   *** removeLayerAt(...);
   *** removeSource(...);
   *** removeSource(...);
}

-keep class com.mapbox.mapboxsdk.maps.Projection
-keepclassmembers class com.mapbox.mapboxsdk.maps.Projection {
   *** getVisibleRegion(...);
   *** calculateZoom(...);
   *** fromScreenLocation(...);
   *** getLatLngForProjectedMeters(...);
   *** getMetersPerPixelAtLatitude(...);
   *** getProjectedMetersForLatLng(...);
   *** getVisibleRegion(...);
   *** invalidateContentPadding(...);
   *** toScreenLocation(...);
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMapOptions
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMapOptions {
   <init>(...);
   *** getApiBaseUri(...);
   *** getApiBaseUrl(...);
   *** getAttributionEnabled(...);
   *** getAttributionGravity(...);
   *** getAttributionTintColor(...);
   *** getCamera(...);
   *** getCompassEnabled(...);
   *** getCompassFadeFacingNorth(...);
   *** getCompassGravity(...);
   *** getCompassImage(...);
   *** getCrossSourceCollisions(...);
   *** getDebugActive(...);
   *** getDoubleTapGesturesEnabled(...);
   *** getForegroundLoadColor(...);
   *** isLocalIdeographFontFamilyEnabled(...);
   *** getLocalIdeographFontFamily(...);
   *** getLogoEnabled(...);
   *** getLogoGravity(...);
   *** getMaxZoomPreference(...);
   *** getMinZoomPreference(...);
   *** getPixelRatio(...);
   *** getPrefetchesTiles(...);
   *** getQuickZoomGesturesEnabled(...);
   *** getRenderSurfaceOnTop(...);
   *** getRotateGesturesEnabled(...);
   *** getScrollGesturesEnabled(...);
   *** getTextureMode(...);
   *** getTiltGesturesEnabled(...);
   *** getTranslucentTextureSurface(...);
   *** getZoomGesturesEnabled(...);
   *** apiBaseUri(...);
   *** apiBaseUrl(...);
   *** attributionEnabled(...);
   *** attributionGravity(...);
   *** attributionMargins(...);
   *** attributionTintColor(...);
   *** camera(...);
   *** compassEnabled(...);
   *** compassFadesWhenFacingNorth(...);
   *** compassGravity(...);
   *** compassImage(...);
   *** compassMargins(...);
   *** createFromAttributes(...);
   *** createFromAttributes(...);
   *** crossSourceCollisions(...);
   *** debugActive(...);
   *** describeContents(...);
   *** doubleTapGesturesEnabled(...);
   *** foregroundLoadColor(...);
   *** getAttributionMargins(...);
   *** getCompassMargins(...);
   *** getLogoMargins(...);
   *** localIdeographFontFamily(...);
   *** localIdeographFontFamily(...);
   *** localIdeographFontFamilyEnabled(...);
   *** logoEnabled(...);
   *** logoGravity(...);
   *** logoMargins(...);
   *** maxZoomPreference(...);
   *** minZoomPreference(...);
   *** pixelRatio(...);
   *** quickZoomGesturesEnabled(...);
   *** renderSurfaceOnTop(...);
   *** rotateGesturesEnabled(...);
   *** scrollGesturesEnabled(...);
   *** setPrefetchesTiles(...);
   *** textureMode(...);
   *** tiltGesturesEnabled(...);
   *** translucentTextureSurface(...);
   *** writeToParcel(...);
   *** zoomGesturesEnabled(...);
}

-keep class com.mapbox.mapboxsdk.maps.OnMapReadyCallback
-keepclassmembers class com.mapbox.mapboxsdk.maps.OnMapReadyCallback {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$CancelableCallback
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$CancelableCallback {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$InfoWindowAdapter
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$InfoWindowAdapter {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnCameraIdleListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnCameraIdleListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnCameraIdleListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnCameraIdleListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnCameraMoveCanceledListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnCameraMoveCanceledListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnCameraMoveCanceledListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnCameraMoveCanceledListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnCameraMoveListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnCameraMoveListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnCameraMoveListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnCameraMoveListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnCameraMoveStartedListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnCameraMoveStartedListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnCameraMoveStartedListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnCameraMoveStartedListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnDeveloperAnimationListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnDeveloperAnimationListener {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnFlingListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnFlingListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnFlingListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnFlingListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnFpsChangedListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnFpsChangedListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnFpsChangedListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnFpsChangedListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnInfoWindowClickListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnInfoWindowClickListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnInfoWindowClickListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnInfoWindowClickListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnInfoWindowCloseListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnInfoWindowCloseListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnInfoWindowCloseListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnInfoWindowCloseListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnInfoWindowLongClickListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnInfoWindowLongClickListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnInfoWindowLongClickListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnInfoWindowLongClickListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnMapClickListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnMapClickListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnMapClickListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnMapClickListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnMapLongClickListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnMapLongClickListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnMapLongClickListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnMapLongClickListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnMarkerClickListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnMarkerClickListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnMarkerClickListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnMarkerClickListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnMoveListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnMoveListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnMoveListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnMoveListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnPolygonClickListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnPolygonClickListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnPolygonClickListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnPolygonClickListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnPolylineClickListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnPolylineClickListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnPolylineClickListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnPolylineClickListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnRotateListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnRotateListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnRotateListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnRotateListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnScaleListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnScaleListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnScaleListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnScaleListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$OnShoveListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$OnShoveListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnShoveListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapboxMap_OnShoveListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap$SnapshotReadyCallback
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap$SnapshotReadyCallback {
}

-keep class com.mapbox.mapboxsdk.maps.MapboxMap
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapboxMap {
   *** isAllowConcurrentMultipleOpenInfoWindows(...);
   *** setAllowConcurrentMultipleOpenInfoWindows(...);
   *** getAnnotations(...);
   *** getCameraPosition(...);
   *** setCameraPosition(...);
   *** isDebugActive(...);
   *** setDebugActive(...);
   *** getGesturesManager(...);
   *** getHeight(...);
   *** getInfoWindowAdapter(...);
   *** setInfoWindowAdapter(...);
   *** getLocationComponent(...);
   *** getMarkers(...);
   *** getMaxZoomLevel(...);
   *** getMinZoomLevel(...);
   *** getOnInfoWindowClickListener(...);
   *** setOnInfoWindowClickListener(...);
   *** getOnInfoWindowCloseListener(...);
   *** setOnInfoWindowCloseListener(...);
   *** getOnInfoWindowLongClickListener(...);
   *** setOnInfoWindowLongClickListener(...);
   *** getPolygons(...);
   *** getPolylines(...);
   *** getPrefetchesTiles(...);
   *** setPrefetchesTiles(...);
   *** getProjection(...);
   *** getSelectedMarkers(...);
   *** getStyle(...);
   *** getUiSettings(...);
   *** getWidth(...);
   *** addMarker(...);
   *** addMarker(...);
   *** addMarkers(...);
   *** addOnCameraIdleListener(...);
   *** addOnCameraMoveCancelListener(...);
   *** addOnCameraMoveListener(...);
   *** addOnCameraMoveStartedListener(...);
   *** addOnFlingListener(...);
   *** addOnMapClickListener(...);
   *** addOnMapLongClickListener(...);
   *** addOnMoveListener(...);
   *** addOnRotateListener(...);
   *** addOnScaleListener(...);
   *** addOnShoveListener(...);
   *** addPolygon(...);
   *** addPolygons(...);
   *** addPolyline(...);
   *** addPolylines(...);
   *** animateCamera(...);
   *** animateCamera(...);
   *** animateCamera(...);
   *** animateCamera(...);
   *** cancelAllVelocityAnimations(...);
   *** cancelTransitions(...);
   *** clear(...);
   *** cycleDebugOptions(...);
   *** deselectMarker(...);
   *** deselectMarkers(...);
   *** easeCamera(...);
   *** easeCamera(...);
   *** easeCamera(...);
   *** easeCamera(...);
   *** easeCamera(...);
   *** easeCamera(...);
   *** getAnnotation(...);
   *** getCameraForGeometry(...);
   *** getCameraForGeometry(...);
   *** getCameraForGeometry(...);
   *** getCameraForGeometry(...);
   *** getCameraForLatLngBounds(...);
   *** getCameraForLatLngBounds(...);
   *** getCameraForLatLngBounds(...);
   *** getCameraForLatLngBounds(...);
   *** getPadding(...);
   *** getStyle(...);
   *** moveCamera(...);
   *** moveCamera(...);
   *** queryRenderedFeatures(...);
   *** queryRenderedFeatures(...);
   *** queryRenderedFeatures(...);
   *** queryRenderedFeatures(...);
   *** removeAnnotation(...);
   *** removeAnnotation(...);
   *** removeAnnotations(...);
   *** removeAnnotations(...);
   *** removeMarker(...);
   *** removeOnCameraIdleListener(...);
   *** removeOnCameraMoveCancelListener(...);
   *** removeOnCameraMoveListener(...);
   *** removeOnCameraMoveStartedListener(...);
   *** removeOnFlingListener(...);
   *** removeOnMapClickListener(...);
   *** removeOnMapLongClickListener(...);
   *** removeOnMoveListener(...);
   *** removeOnRotateListener(...);
   *** removeOnScaleListener(...);
   *** removeOnShoveListener(...);
   *** removePolygon(...);
   *** removePolyline(...);
   *** resetNorth(...);
   *** scrollBy(...);
   *** scrollBy(...);
   *** selectMarker(...);
   *** setFocalBearing(...);
   *** setGesturesManager(...);
   *** setLatLngBoundsForCameraTarget(...);
   *** setMaxZoomPreference(...);
   *** setMinZoomPreference(...);
   *** setOfflineRegionDefinition(...);
   *** setOfflineRegionDefinition(...);
   *** setOnFpsChangedListener(...);
   *** setOnMarkerClickListener(...);
   *** setOnPolygonClickListener(...);
   *** setOnPolylineClickListener(...);
   *** setPadding(...);
   *** setStyle(...);
   *** setStyle(...);
   *** setStyle(...);
   *** setStyle(...);
   *** snapshot(...);
   *** updateMarker(...);
   *** updatePolygon(...);
   *** updatePolyline(...);
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnCameraDidChangeListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnCameraDidChangeListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnCameraDidChangeListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnCameraDidChangeListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnCameraIsChangingListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnCameraIsChangingListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnCameraIsChangingListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnCameraIsChangingListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnCameraWillChangeListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnCameraWillChangeListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnCameraWillChangeListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnCameraWillChangeListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnCanRemoveUnusedStyleImageListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnCanRemoveUnusedStyleImageListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnCanRemoveUnusedStyleImageListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnCanRemoveUnusedStyleImageListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnDidBecomeIdleListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnDidBecomeIdleListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidBecomeIdleListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidBecomeIdleListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnDidFailLoadingMapListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnDidFailLoadingMapListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidFailLoadingMapListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidFailLoadingMapListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnDidFinishLoadingMapListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnDidFinishLoadingMapListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidFinishLoadingMapListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidFinishLoadingMapListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnDidFinishLoadingStyleListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnDidFinishLoadingStyleListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidFinishLoadingStyleListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidFinishLoadingStyleListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnDidFinishRenderingFrameListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnDidFinishRenderingFrameListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidFinishRenderingFrameListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidFinishRenderingFrameListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnDidFinishRenderingMapListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnDidFinishRenderingMapListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidFinishRenderingMapListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnDidFinishRenderingMapListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnSourceChangedListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnSourceChangedListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnSourceChangedListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnSourceChangedListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnStyleImageMissingListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnStyleImageMissingListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnStyleImageMissingListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnStyleImageMissingListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnWillStartLoadingMapListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnWillStartLoadingMapListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnWillStartLoadingMapListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnWillStartLoadingMapListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnWillStartRenderingFrameListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnWillStartRenderingFrameListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnWillStartRenderingFrameListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnWillStartRenderingFrameListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView$OnWillStartRenderingMapListener
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView$OnWillStartRenderingMapListener {
}

-keep class mono.com.mapbox.mapboxsdk.maps.MapView_OnWillStartRenderingMapListenerImplementor
-keepclassmembers class mono.com.mapbox.mapboxsdk.maps.MapView_OnWillStartRenderingMapListenerImplementor {
}

-keep class com.mapbox.mapboxsdk.maps.MapView
-keepclassmembers class com.mapbox.mapboxsdk.maps.MapView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isDestroyed(...);
   *** getViewContent(...);
   *** addOnCameraDidChangeListener(...);
   *** addOnCameraIsChangingListener(...);
   *** addOnCameraWillChangeListener(...);
   *** addOnCanRemoveUnusedStyleImageListener(...);
   *** addOnDidBecomeIdleListener(...);
   *** addOnDidFailLoadingMapListener(...);
   *** addOnDidFinishLoadingMapListener(...);
   *** addOnDidFinishLoadingStyleListener(...);
   *** addOnDidFinishRenderingFrameListener(...);
   *** addOnDidFinishRenderingMapListener(...);
   *** addOnSourceChangedListener(...);
   *** addOnStyleImageMissingListener(...);
   *** addOnWillStartLoadingMapListener(...);
   *** addOnWillStartRenderingFrameListener(...);
   *** addOnWillStartRenderingMapListener(...);
   *** getMapAsync(...);
   *** initialize(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onLowMemory(...);
   *** onPause(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** removeOnCameraDidChangeListener(...);
   *** removeOnCameraIsChangingListener(...);
   *** removeOnCameraWillChangeListener(...);
   *** removeOnCanRemoveUnusedStyleImageListener(...);
   *** removeOnDidBecomeIdleListener(...);
   *** removeOnDidFailLoadingMapListener(...);
   *** removeOnDidFinishLoadingMapListener(...);
   *** removeOnDidFinishLoadingStyleListener(...);
   *** removeOnDidFinishRenderingFrameListener(...);
   *** removeOnDidFinishRenderingMapListener(...);
   *** removeOnSourceChangedListener(...);
   *** removeOnStyleImageMissingListener(...);
   *** removeOnWillStartLoadingMapListener(...);
   *** removeOnWillStartRenderingFrameListener(...);
   *** removeOnWillStartRenderingMapListener(...);
   *** setMapStrictModeEnabled(...);
   *** setMaximumFps(...);
}

-keep class com.mapbox.mapboxsdk.maps.TelemetryDefinition
-keepclassmembers class com.mapbox.mapboxsdk.maps.TelemetryDefinition {
}

-keep class com.mapbox.mapboxsdk.maps.SupportMapFragment
-keepclassmembers class com.mapbox.mapboxsdk.maps.SupportMapFragment {
   <init>(...);
   *** getMapAsync(...);
   *** newInstance(...);
   *** newInstance(...);
   *** onMapReady(...);
}

-keep class com.mapbox.mapboxsdk.maps.UiSettings
-keepclassmembers class com.mapbox.mapboxsdk.maps.UiSettings {
   *** getAttributionDialogManager(...);
   *** setAttributionDialogManager(...);
   *** isAttributionEnabled(...);
   *** setAttributionEnabled(...);
   *** getAttributionGravity(...);
   *** setAttributionGravity(...);
   *** getAttributionMarginBottom(...);
   *** getAttributionMarginLeft(...);
   *** getAttributionMarginRight(...);
   *** getAttributionMarginTop(...);
   *** isCompassEnabled(...);
   *** setCompassEnabled(...);
   *** getCompassGravity(...);
   *** setCompassGravity(...);
   *** getCompassImage(...);
   *** setCompassImage(...);
   *** getCompassMarginBottom(...);
   *** getCompassMarginLeft(...);
   *** getCompassMarginRight(...);
   *** getCompassMarginTop(...);
   *** isDeselectMarkersOnTap(...);
   *** setDeselectMarkersOnTap(...);
   *** isDisableRotateWhenScaling(...);
   *** setDisableRotateWhenScaling(...);
   *** isDoubleTapGesturesEnabled(...);
   *** setDoubleTapGesturesEnabled(...);
   *** isFlingVelocityAnimationEnabled(...);
   *** setFlingVelocityAnimationEnabled(...);
   *** getFocalPoint(...);
   *** setFocalPoint(...);
   *** getHeight(...);
   *** isIncreaseRotateThresholdWhenScaling(...);
   *** setIncreaseRotateThresholdWhenScaling(...);
   *** isIncreaseScaleThresholdWhenRotating(...);
   *** setIncreaseScaleThresholdWhenRotating(...);
   *** isCompassFadeWhenFacingNorth(...);
   *** isLogoEnabled(...);
   *** setLogoEnabled(...);
   *** getLogoGravity(...);
   *** setLogoGravity(...);
   *** getLogoMarginBottom(...);
   *** getLogoMarginLeft(...);
   *** getLogoMarginRight(...);
   *** getLogoMarginTop(...);
   *** isQuickZoomGesturesEnabled(...);
   *** setQuickZoomGesturesEnabled(...);
   *** isRotateGesturesEnabled(...);
   *** setRotateGesturesEnabled(...);
   *** isRotateVelocityAnimationEnabled(...);
   *** setRotateVelocityAnimationEnabled(...);
   *** isScaleVelocityAnimationEnabled(...);
   *** setScaleVelocityAnimationEnabled(...);
   *** isScrollGesturesEnabled(...);
   *** setScrollGesturesEnabled(...);
   *** isTiltGesturesEnabled(...);
   *** setTiltGesturesEnabled(...);
   *** getWidth(...);
   *** isZoomGesturesEnabled(...);
   *** setZoomGesturesEnabled(...);
   *** getZoomRate(...);
   *** setZoomRate(...);
   *** areAllGesturesEnabled(...);
   *** invalidate(...);
   *** setAllGesturesEnabled(...);
   *** setAllVelocityAnimationsEnabled(...);
   *** setAttributionMargins(...);
   *** setAttributionTintColor(...);
   *** setCompassFadeFacingNorth(...);
   *** setCompassMargins(...);
   *** setLogoMargins(...);
}

-keep class com.mapbox.mapboxsdk.utils.MapFragmentUtils
-keepclassmembers class com.mapbox.mapboxsdk.utils.MapFragmentUtils {
   <init>(...);
   *** createFragmentArgs(...);
   *** resolveArgs(...);
}

-keep class com.mapbox.mapboxsdk.utils.ColorUtils
-keepclassmembers class com.mapbox.mapboxsdk.utils.ColorUtils {
   <init>(...);
   *** colorToGlRgbaArray(...);
   *** colorToRgbaArray(...);
   *** colorToRgbaString(...);
   *** getAccentColor(...);
   *** getPrimaryColor(...);
   *** getPrimaryDarkColor(...);
   *** getSelector(...);
   *** rgbaToColor(...);
   *** setTintList(...);
}

-keep class com.mapbox.mapboxsdk.annotations.Marker
-keepclassmembers class com.mapbox.mapboxsdk.annotations.Marker {
   <init>(...);
   *** getIcon(...);
   *** setIcon(...);
   *** getInfoWindow(...);
   *** isInfoWindowShown(...);
   *** getPosition(...);
   *** setPosition(...);
   *** getSnippet(...);
   *** setSnippet(...);
   *** getTitle(...);
   *** setTitle(...);
   *** hideInfoWindow(...);
   *** setRightOffsetPixels(...);
   *** setTopOffsetPixels(...);
   *** showInfoWindow(...);
}

-keep class com.mapbox.mapboxsdk.annotations.Polygon
-keepclassmembers class com.mapbox.mapboxsdk.annotations.Polygon {
   *** getFillColor(...);
   *** setFillColor(...);
   *** getHoles(...);
   *** setHoles(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
}

-keep class com.mapbox.mapboxsdk.annotations.Polyline
-keepclassmembers class com.mapbox.mapboxsdk.annotations.Polyline {
   *** getColor(...);
   *** setColor(...);
   *** getWidth(...);
   *** setWidth(...);
}

-keep class com.mapbox.mapboxsdk.annotations.MarkerOptions
-keepclassmembers class com.mapbox.mapboxsdk.annotations.MarkerOptions {
   <init>(...);
   *** getIcon(...);
   *** getMarker(...);
   *** getPosition(...);
   *** getSnippet(...);
   *** getTitle(...);
   *** describeContents(...);
   *** getThis(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.annotations.PolygonOptions
-keepclassmembers class com.mapbox.mapboxsdk.annotations.PolygonOptions {
   *** addHole(...);
   <init>(...);
   *** getAlpha(...);
   *** getFillColor(...);
   *** getHoles(...);
   *** getPoints(...);
   *** getPolygon(...);
   *** getStrokeColor(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** addAllHoles(...);
   *** addHole(...);
   *** alpha(...);
   *** describeContents(...);
   *** fillColor(...);
   *** strokeColor(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.annotations.Annotation
-keepclassmembers class com.mapbox.mapboxsdk.annotations.Annotation {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** getMapView(...);
   *** getMapboxMap(...);
   *** compareTo(...);
   *** remove(...);
   *** setMapView(...);
   *** setMapboxMap(...);
   *** compareTo(...);
}

-keep class com.mapbox.mapboxsdk.annotations.Annotation
-keepclassmembers class com.mapbox.mapboxsdk.annotations.Annotation {
   *** compareTo(...);
}

-keep class com.mapbox.mapboxsdk.annotations.InfoWindow
-keepclassmembers class com.mapbox.mapboxsdk.annotations.InfoWindow {
   *** getView(...);
   *** update(...);
}

-keep class com.mapbox.mapboxsdk.annotations.Icon
-keepclassmembers class com.mapbox.mapboxsdk.annotations.Icon {
   *** getBitmap(...);
   *** getId(...);
   *** getScale(...);
   *** toBytes(...);
}

-keep class com.mapbox.mapboxsdk.annotations.BaseMarkerOptions
-keepclassmembers class com.mapbox.mapboxsdk.annotations.BaseMarkerOptions {
   <init>(...);
   *** getMarker(...);
   *** getThis(...);
   *** icon(...);
   *** position(...);
   *** setIcon(...);
   *** setPosition(...);
   *** setSnippet(...);
   *** setTitle(...);
   *** snippet(...);
   *** title(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.annotations.BaseMarkerOptions
-keepclassmembers class com.mapbox.mapboxsdk.annotations.BaseMarkerOptions {
   *** getMarker(...);
   *** getThis(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.mapbox.mapboxsdk.annotations.BasePointCollection
-keepclassmembers class com.mapbox.mapboxsdk.annotations.BasePointCollection {
   <init>(...);
   *** getAlpha(...);
   *** setAlpha(...);
   *** getPoints(...);
   *** setPoints(...);
   *** addPoint(...);
}

-keep class com.mapbox.mapboxsdk.annotations.BasePointCollection
-keepclassmembers class com.mapbox.mapboxsdk.annotations.BasePointCollection {
   *** compareTo(...);
}

-keep class com.mapbox.mapboxsdk.annotations.PolylineOptions
-keepclassmembers class com.mapbox.mapboxsdk.annotations.PolylineOptions {
   <init>(...);
   *** getAlpha(...);
   *** getColor(...);
   *** getPoints(...);
   *** getPolyline(...);
   *** getWidth(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** alpha(...);
   *** color(...);
   *** describeContents(...);
   *** width(...);
   *** writeToParcel(...);
}

# ACW for Naxam.Mapbox.MapboxAndroidCore
-keep class com.mapbox.android.core.location.LocationEngine
-keepclassmembers class com.mapbox.android.core.location.LocationEngine {
}

-keep class com.mapbox.android.core.location.LocationEngineCallback
-keepclassmembers class com.mapbox.android.core.location.LocationEngineCallback {
}

-keep class com.mapbox.android.core.location.LocationEngineRequest
-keepclassmembers class com.mapbox.android.core.location.LocationEngineRequest {
   *** getDisplacemnt(...);
   *** getFastestInterval(...);
   *** getInterval(...);
   *** getMaxWaitTime(...);
   *** getPriority(...);
}

# ACW for Naxam.Mapbox.Platform.Droid
# ACW for Naxam.Mapbox.Services.Android.Telemetry
# ACW for Naxam.MapboxAccounts.Droid
# ACW for Naxam.MapboxAnnotation.Droid
-keep class com.mapbox.mapboxsdk.plugins.annotation.SymbolManager
-keepclassmembers class com.mapbox.mapboxsdk.plugins.annotation.SymbolManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getFilter(...);
   *** setFilter(...);
   *** getIconAllowOverlap(...);
   *** setIconAllowOverlap(...);
   *** getIconIgnorePlacement(...);
   *** setIconIgnorePlacement(...);
   *** getIconKeepUpright(...);
   *** setIconKeepUpright(...);
   *** getIconOptional(...);
   *** setIconOptional(...);
   *** getIconPadding(...);
   *** setIconPadding(...);
   *** getIconPitchAlignment(...);
   *** setIconPitchAlignment(...);
   *** getIconRotationAlignment(...);
   *** setIconRotationAlignment(...);
   *** getIconTextFit(...);
   *** setIconTextFit(...);
   *** getIconTranslateAnchor(...);
   *** setIconTranslateAnchor(...);
   *** getSymbolAvoidEdges(...);
   *** setSymbolAvoidEdges(...);
   *** getSymbolPlacement(...);
   *** setSymbolPlacement(...);
   *** getSymbolSpacing(...);
   *** setSymbolSpacing(...);
   *** getTextAllowOverlap(...);
   *** setTextAllowOverlap(...);
   *** getTextIgnorePlacement(...);
   *** setTextIgnorePlacement(...);
   *** getTextKeepUpright(...);
   *** setTextKeepUpright(...);
   *** getTextLineHeight(...);
   *** setTextLineHeight(...);
   *** getTextMaxAngle(...);
   *** setTextMaxAngle(...);
   *** getTextOptional(...);
   *** setTextOptional(...);
   *** getTextPadding(...);
   *** setTextPadding(...);
   *** getTextPitchAlignment(...);
   *** setTextPitchAlignment(...);
   *** getTextRotationAlignment(...);
   *** setTextRotationAlignment(...);
   *** getTextTranslateAnchor(...);
   *** setTextTranslateAnchor(...);
   *** create(...);
   *** create(...);
   *** getIconTextFitPadding(...);
   *** getIconTranslate(...);
   *** getTextTranslate(...);
   *** getTextVariableAnchor(...);
   *** setDataDrivenPropertyIsUsed(...);
   *** setIconTextFitPadding(...);
   *** setIconTranslate(...);
   *** setTextTranslate(...);
   *** setTextVariableAnchor(...);
}

-keep class com.mapbox.mapboxsdk.plugins.annotation.Options
-keepclassmembers class com.mapbox.mapboxsdk.plugins.annotation.Options {
   <init>(...);
}

-keep class com.mapbox.mapboxsdk.plugins.annotation.Options
-keepclassmembers class com.mapbox.mapboxsdk.plugins.annotation.Options {
}

-keep class com.mapbox.mapboxsdk.plugins.annotation.Annotation
-keepclassmembers class com.mapbox.mapboxsdk.plugins.annotation.Annotation {
   *** getData(...);
   *** setData(...);
   *** isDraggable(...);
   *** setDraggable(...);
   *** getGeometry(...);
   *** setGeometry(...);
   *** getId(...);
}

-keep class com.mapbox.mapboxsdk.plugins.annotation.Annotation
-keepclassmembers class com.mapbox.mapboxsdk.plugins.annotation.Annotation {
}

-keep class com.mapbox.mapboxsdk.plugins.annotation.AnnotationManager
-keepclassmembers class com.mapbox.mapboxsdk.plugins.annotation.AnnotationManager {
   *** getAnnotations(...);
   *** addClickListener(...);
   *** addDragListener(...);
   *** addLongClickListener(...);
   *** create(...);
   *** create(...);
   *** delete(...);
   *** delete(...);
   *** deleteAll(...);
   *** onDestroy(...);
   *** removeClickListener(...);
   *** removeDragListener(...);
   *** removeLongClickListener(...);
   *** setDataDrivenPropertyIsUsed(...);
   *** update(...);
   *** update(...);
   *** updateSource(...);
}

-keep class com.mapbox.mapboxsdk.plugins.annotation.AnnotationManager
-keepclassmembers class com.mapbox.mapboxsdk.plugins.annotation.AnnotationManager {
   *** setDataDrivenPropertyIsUsed(...);
}

-keep class com.mapbox.mapboxsdk.plugins.annotation.OnSymbolClickListener
-keepclassmembers class com.mapbox.mapboxsdk.plugins.annotation.OnSymbolClickListener {
}

-keep class com.mapbox.mapboxsdk.plugins.annotation.Symbol
-keepclassmembers class com.mapbox.mapboxsdk.plugins.annotation.Symbol {
   *** getIconAnchor(...);
   *** setIconAnchor(...);
   *** getIconColor(...);
   *** setIconColor(...);
   *** getIconColorAsInt(...);
   *** getIconHaloBlur(...);
   *** setIconHaloBlur(...);
   *** getIconHaloColor(...);
   *** setIconHaloColor(...);
   *** getIconHaloColorAsInt(...);
   *** getIconHaloWidth(...);
   *** setIconHaloWidth(...);
   *** getIconImage(...);
   *** setIconImage(...);
   *** getIconOffset(...);
   *** setIconOffset(...);
   *** getIconOpacity(...);
   *** setIconOpacity(...);
   *** getIconRotate(...);
   *** setIconRotate(...);
   *** getIconSize(...);
   *** setIconSize(...);
   *** getLatLng(...);
   *** setLatLng(...);
   *** getSymbolSortKey(...);
   *** setSymbolSortKey(...);
   *** getTextAnchor(...);
   *** setTextAnchor(...);
   *** getTextColor(...);
   *** setTextColor(...);
   *** getTextColorAsInt(...);
   *** getTextField(...);
   *** setTextField(...);
   *** getTextHaloBlur(...);
   *** setTextHaloBlur(...);
   *** getTextHaloColor(...);
   *** setTextHaloColor(...);
   *** getTextHaloColorAsInt(...);
   *** getTextHaloWidth(...);
   *** setTextHaloWidth(...);
   *** getTextJustify(...);
   *** setTextJustify(...);
   *** getTextLetterSpacing(...);
   *** setTextLetterSpacing(...);
   *** getTextMaxWidth(...);
   *** setTextMaxWidth(...);
   *** getTextOffset(...);
   *** setTextOffset(...);
   *** getTextOpacity(...);
   *** setTextOpacity(...);
   *** getTextRadialOffset(...);
   *** setTextRadialOffset(...);
   *** getTextRotate(...);
   *** setTextRotate(...);
   *** getTextSize(...);
   *** setTextSize(...);
   *** getTextTransform(...);
   *** setTextTransform(...);
   *** getTextFont(...);
   *** setIconColor(...);
   *** setIconHaloColor(...);
   *** setTextColor(...);
   *** setTextFont(...);
   *** setTextHaloColor(...);
}

-keep class com.mapbox.mapboxsdk.plugins.annotation.SymbolOptions
-keepclassmembers class com.mapbox.mapboxsdk.plugins.annotation.SymbolOptions {
   <init>(...);
   *** getData(...);
   *** getDraggable(...);
   *** getGeometry(...);
   *** getIconAnchor(...);
   *** getIconColor(...);
   *** getIconHaloBlur(...);
   *** getIconHaloColor(...);
   *** getIconHaloWidth(...);
   *** getIconImage(...);
   *** getIconOpacity(...);
   *** getIconRotate(...);
   *** getIconSize(...);
   *** getLatLng(...);
   *** getSymbolSortKey(...);
   *** getTextAnchor(...);
   *** getTextColor(...);
   *** getTextField(...);
   *** getTextHaloBlur(...);
   *** getTextHaloColor(...);
   *** getTextHaloWidth(...);
   *** getTextJustify(...);
   *** getTextLetterSpacing(...);
   *** getTextMaxWidth(...);
   *** getTextOpacity(...);
   *** getTextRadialOffset(...);
   *** getTextRotate(...);
   *** getTextSize(...);
   *** getTextTransform(...);
   *** getIconOffset(...);
   *** getTextFont(...);
   *** getTextOffset(...);
   *** withData(...);
   *** withDraggable(...);
   *** withGeometry(...);
   *** withIconAnchor(...);
   *** withIconColor(...);
   *** withIconHaloBlur(...);
   *** withIconHaloColor(...);
   *** withIconHaloWidth(...);
   *** withIconImage(...);
   *** withIconOffset(...);
   *** withIconOpacity(...);
   *** withIconRotate(...);
   *** withIconSize(...);
   *** withLatLng(...);
   *** withSymbolSortKey(...);
   *** withTextAnchor(...);
   *** withTextColor(...);
   *** withTextField(...);
   *** withTextFont(...);
   *** withTextHaloBlur(...);
   *** withTextHaloColor(...);
   *** withTextHaloWidth(...);
   *** withTextJustify(...);
   *** withTextLetterSpacing(...);
   *** withTextMaxWidth(...);
   *** withTextOffset(...);
   *** withTextOpacity(...);
   *** withTextRadialOffset(...);
   *** withTextRotate(...);
   *** withTextSize(...);
   *** withTextTransform(...);
}

# ACW for Naxam.MapboxGestures.Droid
-keep class com.mapbox.android.gestures.AndroidGesturesManager
-keepclassmembers class com.mapbox.android.gestures.AndroidGesturesManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDetectors(...);
   *** getMoveGestureDetector(...);
   *** getMultiFingerTapGestureDetector(...);
   *** getMutuallyExclusiveGestures(...);
   *** setMutuallyExclusiveGestures(...);
   *** getRotateGestureDetector(...);
   *** getShoveGestureDetector(...);
   *** getSidewaysShoveGestureDetector(...);
   *** getStandardGestureDetector(...);
   *** getStandardScaleGestureDetector(...);
   *** onTouchEvent(...);
   *** removeMoveGestureListener(...);
   *** removeMultiFingerTapGestureListener(...);
   *** removeRotateGestureListener(...);
   *** removeShoveGestureListener(...);
   *** removeSidewaysShoveGestureListener(...);
   *** removeStandardGestureListener(...);
   *** removeStandardScaleGestureListener(...);
   *** setMoveGestureListener(...);
   *** setMultiFingerTapGestureListener(...);
   *** setRotateGestureListener(...);
   *** setShoveGestureListener(...);
   *** setSidewaysShoveGestureListener(...);
   *** setStandardGestureListener(...);
   *** setStandardScaleGestureListener(...);
}

-keep class com.mapbox.android.gestures.MultiFingerTapGestureDetector$OnMultiFingerTapGestureListener
-keepclassmembers class com.mapbox.android.gestures.MultiFingerTapGestureDetector$OnMultiFingerTapGestureListener {
}

-keep class mono.com.mapbox.android.gestures.MultiFingerTapGestureDetector_OnMultiFingerTapGestureListenerImplementor
-keepclassmembers class mono.com.mapbox.android.gestures.MultiFingerTapGestureDetector_OnMultiFingerTapGestureListenerImplementor {
}

-keep class com.mapbox.android.gestures.MultiFingerTapGestureDetector
-keepclassmembers class com.mapbox.android.gestures.MultiFingerTapGestureDetector {
   <init>(...);
   *** getMultiFingerTapMovementThreshold(...);
   *** setMultiFingerTapMovementThreshold(...);
   *** getMultiFingerTapTimeThreshold(...);
   *** setMultiFingerTapTimeThreshold(...);
   *** setMultiFingerTapMovementThresholdResource(...);
}

-keep class com.mapbox.android.gestures.ShoveGestureDetector$OnShoveGestureListener
-keepclassmembers class com.mapbox.android.gestures.ShoveGestureDetector$OnShoveGestureListener {
}

-keep class mono.com.mapbox.android.gestures.ShoveGestureDetector_OnShoveGestureListenerImplementor
-keepclassmembers class mono.com.mapbox.android.gestures.ShoveGestureDetector_OnShoveGestureListenerImplementor {
}

-keep class com.mapbox.android.gestures.ShoveGestureDetector
-keepclassmembers class com.mapbox.android.gestures.ShoveGestureDetector {
   <init>(...);
   *** getDeltaPixelSinceLast(...);
   *** getDeltaPixelsSinceStart(...);
   *** getMaxShoveAngle(...);
   *** setMaxShoveAngle(...);
   *** getPixelDeltaThreshold(...);
   *** setPixelDeltaThreshold(...);
   *** provideHandledTypes(...);
   *** setPixelDeltaThresholdResource(...);
}

-keep class com.mapbox.android.gestures.RotateGestureDetector$OnRotateGestureListener
-keepclassmembers class com.mapbox.android.gestures.RotateGestureDetector$OnRotateGestureListener {
}

-keep class mono.com.mapbox.android.gestures.RotateGestureDetector_OnRotateGestureListenerImplementor
-keepclassmembers class mono.com.mapbox.android.gestures.RotateGestureDetector_OnRotateGestureListenerImplementor {
}

-keep class com.mapbox.android.gestures.RotateGestureDetector
-keepclassmembers class com.mapbox.android.gestures.RotateGestureDetector {
   <init>(...);
   *** getAngleThreshold(...);
   *** setAngleThreshold(...);
   *** getDeltaSinceLast(...);
   *** getDeltaSinceStart(...);
   *** provideHandledTypes(...);
}

-keep class com.mapbox.android.gestures.MoveGestureDetector$OnMoveGestureListener
-keepclassmembers class com.mapbox.android.gestures.MoveGestureDetector$OnMoveGestureListener {
}

-keep class mono.com.mapbox.android.gestures.MoveGestureDetector_OnMoveGestureListenerImplementor
-keepclassmembers class mono.com.mapbox.android.gestures.MoveGestureDetector_OnMoveGestureListenerImplementor {
}

-keep class com.mapbox.android.gestures.MoveGestureDetector
-keepclassmembers class com.mapbox.android.gestures.MoveGestureDetector {
   <init>(...);
   *** getLastDistanceX(...);
   *** getLastDistanceY(...);
   *** getMoveThreshold(...);
   *** setMoveThreshold(...);
   *** getMoveObject(...);
   *** provideHandledTypes(...);
   *** setMoveThresholdResource(...);
}

-keep class com.mapbox.android.gestures.MoveDistancesObject
-keepclassmembers class com.mapbox.android.gestures.MoveDistancesObject {
   <init>(...);
   *** getCurrentX(...);
   *** getCurrentY(...);
   *** getDistanceXSinceLast(...);
   *** getDistanceXSinceStart(...);
   *** getDistanceYSinceLast(...);
   *** getDistanceYSinceStart(...);
   *** getInitialX(...);
   *** getInitialY(...);
   *** getPreviousX(...);
   *** getPreviousY(...);
   *** addNewPosition(...);
}

-keep class com.mapbox.android.gestures.BaseGesture
-keepclassmembers class com.mapbox.android.gestures.BaseGesture {
   <init>(...);
   *** getCurrentEvent(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getGestureDuration(...);
   *** getPreviousEvent(...);
   *** analyzeEvent(...);
   *** canExecute(...);
   *** onTouchEvent(...);
   *** removeListener(...);
   *** setListener(...);
}

-keep class com.mapbox.android.gestures.BaseGesture
-keepclassmembers class com.mapbox.android.gestures.BaseGesture {
   *** analyzeEvent(...);
}

-keep class com.mapbox.android.gestures.StandardScaleGestureDetector$StandardOnScaleGestureListener
-keepclassmembers class com.mapbox.android.gestures.StandardScaleGestureDetector$StandardOnScaleGestureListener {
}

-keep class mono.com.mapbox.android.gestures.StandardScaleGestureDetector_StandardOnScaleGestureListenerImplementor
-keepclassmembers class mono.com.mapbox.android.gestures.StandardScaleGestureDetector_StandardOnScaleGestureListenerImplementor {
}

-keep class com.mapbox.android.gestures.StandardScaleGestureDetector
-keepclassmembers class com.mapbox.android.gestures.StandardScaleGestureDetector {
   <init>(...);
   *** getCurrentSpan(...);
   *** getCurrentSpanX(...);
   *** getCurrentSpanY(...);
   *** isScalingOut(...);
   *** getPreviousSpan(...);
   *** getPreviousSpanX(...);
   *** getPreviousSpanY(...);
   *** getScaleFactor(...);
   *** getSpanSinceStartThreshold(...);
   *** setSpanSinceStartThreshold(...);
   *** getStartSpan(...);
   *** getStartSpanX(...);
   *** getStartSpanY(...);
   *** provideHandledTypes(...);
   *** setSpanSinceStartThresholdResource(...);
}

-keep class com.mapbox.android.gestures.ProgressiveGesture
-keepclassmembers class com.mapbox.android.gestures.ProgressiveGesture {
   <init>(...);
   *** isInProgress(...);
   *** gestureStarted(...);
   *** gestureStopped(...);
   *** interrupt(...);
   *** provideHandledTypes(...);
}

-keep class com.mapbox.android.gestures.ProgressiveGesture
-keepclassmembers class com.mapbox.android.gestures.ProgressiveGesture {
   *** provideHandledTypes(...);
}

-keep class com.mapbox.android.gestures.MultiFingerGesture
-keepclassmembers class com.mapbox.android.gestures.MultiFingerGesture {
   <init>(...);
   *** getFocalPoint(...);
   *** isSloppyGesture(...);
   *** getPointersCount(...);
   *** getRequiredPointersCount(...);
   *** getSpanThreshold(...);
   *** setSpanThreshold(...);
   *** analyzeEvent(...);
   *** analyzeMovement(...);
   *** getCurrentSpan(...);
   *** getCurrentSpanX(...);
   *** getCurrentSpanY(...);
   *** getPreviousSpan(...);
   *** getPreviousSpanX(...);
   *** getPreviousSpanY(...);
   *** reset(...);
   *** setSpanThresholdResource(...);
}

-keep class com.mapbox.android.gestures.MultiFingerGesture
-keepclassmembers class com.mapbox.android.gestures.MultiFingerGesture {
}

-keep class com.mapbox.android.gestures.SidewaysShoveGestureDetector$OnSidewaysShoveGestureListener
-keepclassmembers class com.mapbox.android.gestures.SidewaysShoveGestureDetector$OnSidewaysShoveGestureListener {
}

-keep class mono.com.mapbox.android.gestures.SidewaysShoveGestureDetector_OnSidewaysShoveGestureListenerImplementor
-keepclassmembers class mono.com.mapbox.android.gestures.SidewaysShoveGestureDetector_OnSidewaysShoveGestureListenerImplementor {
}

-keep class com.mapbox.android.gestures.SidewaysShoveGestureDetector
-keepclassmembers class com.mapbox.android.gestures.SidewaysShoveGestureDetector {
   <init>(...);
   *** getDeltaPixelSinceLast(...);
   *** getDeltaPixelsSinceStart(...);
   *** getMaxShoveAngle(...);
   *** setMaxShoveAngle(...);
   *** getPixelDeltaThreshold(...);
   *** setPixelDeltaThreshold(...);
   *** provideHandledTypes(...);
   *** setPixelDeltaThresholdResource(...);
}

-keep class com.mapbox.android.gestures.StandardGestureDetector$StandardOnGestureListener
-keepclassmembers class com.mapbox.android.gestures.StandardGestureDetector$StandardOnGestureListener {
}

-keep class com.mapbox.android.gestures.StandardGestureDetector
-keepclassmembers class com.mapbox.android.gestures.StandardGestureDetector {
   <init>(...);
   *** isLongpressEnabled(...);
   *** setIsLongpressEnabled(...);
   *** analyzeEvent(...);
}

# ACW for Naxam.MapboxSdkGeojson.Droid
-keep class com.mapbox.geojson.Feature
-keepclassmembers class com.mapbox.geojson.Feature {
   *** addBooleanProperty(...);
   *** addCharacterProperty(...);
   *** addNumberProperty(...);
   *** addProperty(...);
   *** addStringProperty(...);
   *** bbox(...);
   *** fromGeometry(...);
   *** fromGeometry(...);
   *** fromGeometry(...);
   *** fromGeometry(...);
   *** fromGeometry(...);
   *** fromGeometry(...);
   *** fromJson(...);
   *** geometry(...);
   *** getBooleanProperty(...);
   *** getCharacterProperty(...);
   *** getNumberProperty(...);
   *** getProperty(...);
   *** getStringProperty(...);
   *** hasNonNullValueForProperty(...);
   *** hasProperty(...);
   *** id(...);
   *** properties(...);
   *** removeProperty(...);
   *** toJson(...);
   *** type(...);
   *** typeAdapter(...);
}

-keep class com.mapbox.geojson.FeatureCollection
-keepclassmembers class com.mapbox.geojson.FeatureCollection {
   *** bbox(...);
   *** features(...);
   *** fromFeature(...);
   *** fromFeature(...);
   *** fromFeatures(...);
   *** fromFeatures(...);
   *** fromFeatures(...);
   *** fromFeatures(...);
   *** fromJson(...);
   *** toJson(...);
   *** type(...);
   *** typeAdapter(...);
}

-keep class com.mapbox.geojson.Point
-keepclassmembers class com.mapbox.geojson.Point {
   *** hasAltitude(...);
   *** altitude(...);
   *** bbox(...);
   *** coordinates(...);
   *** fromJson(...);
   *** fromLngLat(...);
   *** fromLngLat(...);
   *** fromLngLat(...);
   *** fromLngLat(...);
   *** latitude(...);
   *** longitude(...);
   *** toJson(...);
   *** type(...);
   *** typeAdapter(...);
}

-keep class com.mapbox.geojson.BoundingBox
-keepclassmembers class com.mapbox.geojson.BoundingBox {
   *** east(...);
   *** fromCoordinates(...);
   *** fromCoordinates(...);
   *** fromJson(...);
   *** fromLngLats(...);
   *** fromLngLats(...);
   *** fromPoints(...);
   *** north(...);
   *** northeast(...);
   *** south(...);
   *** southwest(...);
   *** toJson(...);
   *** typeAdapter(...);
   *** west(...);
}

-keep class com.mapbox.geojson.CoordinateContainer
-keepclassmembers class com.mapbox.geojson.CoordinateContainer {
}

-keep class com.mapbox.geojson.GeoJson
-keepclassmembers class com.mapbox.geojson.GeoJson {
}

-keep class com.mapbox.geojson.Geometry
-keepclassmembers class com.mapbox.geojson.Geometry {
}

# ACW for Naxam.MapboxSdkTurf.Droid
# ACW for Naxam.SoLoader.Droid
# ACW for Plugin.CurrentActivity
# ACW for Plugin.FilePicker
# ACW for Plugin.Fingerprint.Android.Samsung
-keep class com.samsung.android.sdk.pass.Spass
-keepclassmembers class com.samsung.android.sdk.pass.Spass {
   <init>(...);
   *** getVersionCode(...);
   *** getVersionName(...);
   *** initialize(...);
   *** isFeatureEnabled(...);
}

-keep class com.samsung.android.sdk.pass.SpassFingerprint$IdentifyListener
-keepclassmembers class com.samsung.android.sdk.pass.SpassFingerprint$IdentifyListener {
}

-keep class com.samsung.android.sdk.pass.SpassFingerprint
-keepclassmembers class com.samsung.android.sdk.pass.SpassFingerprint {
   <init>(...);
   *** getGuideForPoorQuality(...);
   *** hasRegisteredFinger(...);
   *** getIdentifiedFingerprintIndex(...);
   *** getRegisteredFingerprintName(...);
   *** getRegisteredFingerprintUniqueID(...);
   *** cancelIdentify(...);
   *** changeStandbyString(...);
   *** setCanceledOnTouchOutside(...);
   *** setDialogBgTransparency(...);
   *** setDialogButton(...);
   *** setDialogIcon(...);
   *** setDialogTitle(...);
   *** setIntendedFingerprintIndex(...);
   *** startIdentify(...);
   *** startIdentifyWithDialog(...);
}

# ACW for Plugin.Fingerprint
# ACW for Plugin.Geolocator
# ACW for Plugin.InputKit
# ACW for Plugin.Media
# ACW for Plugin.Permissions
# ACW for Rg.Plugins.Popup
# ACW for SQLitePCLRaw.provider.e_sqlite3
# ACW for Square.OkHttp3
# ACW for Square.OkIO
# ACW for Xamarin.Android.Arch.Core.Common
# ACW for Xamarin.Android.Arch.Core.Runtime
# ACW for Xamarin.Android.Arch.Lifecycle.Common
-keep class android.arch.lifecycle.Lifecycle$State
-keepclassmembers class android.arch.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class android.arch.lifecycle.Lifecycle
-keepclassmembers class android.arch.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class android.arch.lifecycle.LifecycleObserver
-keepclassmembers class android.arch.lifecycle.LifecycleObserver {
}

-keep class android.arch.lifecycle.LifecycleOwner
-keepclassmembers class android.arch.lifecycle.LifecycleOwner {
}

-keep class android.arch.lifecycle.Lifecycle
-keepclassmembers class android.arch.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.Android.Arch.Lifecycle.LiveData.Core
-keep class android.arch.lifecycle.Observer
-keepclassmembers class android.arch.lifecycle.Observer {
}

-keep class android.arch.lifecycle.LiveData
-keepclassmembers class android.arch.lifecycle.LiveData {
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class android.arch.lifecycle.LiveData
-keepclassmembers class android.arch.lifecycle.LiveData {
}

# ACW for Xamarin.Android.Arch.Lifecycle.LiveData
# ACW for Xamarin.Android.Arch.Lifecycle.Runtime
# ACW for Xamarin.Android.Arch.Lifecycle.ViewModel
-keep class android.arch.lifecycle.ViewModelStoreOwner
-keepclassmembers class android.arch.lifecycle.ViewModelStoreOwner {
}

-keep class android.arch.lifecycle.ViewModelStore
-keepclassmembers class android.arch.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

# ACW for Xamarin.Android.Support.Animated.Vector.Drawable
# ACW for Xamarin.Android.Support.Annotations
# ACW for Xamarin.Android.Support.AsyncLayoutInflater
# ACW for Xamarin.Android.Support.Collections
-keep class android.support.v4.util.LongSparseArray
-keepclassmembers class android.support.v4.util.LongSparseArray {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** remove(...);
   *** removeAt(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

# ACW for Xamarin.Android.Support.Compat
-keep class android.support.v13.view.DragAndDropPermissionsCompat
-keepclassmembers class android.support.v13.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class android.support.v4.widget.CompoundButtonCompat
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat {
   *** getButtonDrawable(...);
   *** getButtonTintList(...);
   *** getButtonTintMode(...);
   *** setButtonTintList(...);
   *** setButtonTintMode(...);
}

-keep class android.support.v4.widget.AutoSizeableTextView
-keepclassmembers class android.support.v4.widget.AutoSizeableTextView {
}

-keep class android.support.v4.widget.TintableCompoundButton
-keepclassmembers class android.support.v4.widget.TintableCompoundButton {
}

-keep class android.support.v4.widget.TintableImageSourceView
-keepclassmembers class android.support.v4.widget.TintableImageSourceView {
}

-keep class android.support.v4.widget.NestedScrollView$OnScrollChangeListener
-keepclassmembers class android.support.v4.widget.NestedScrollView$OnScrollChangeListener {
}

-keep class mono.android.support.v4.widget.NestedScrollView_OnScrollChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.NestedScrollView_OnScrollChangeListenerImplementor {
}

-keep class android.support.v4.widget.NestedScrollView
-keepclassmembers class android.support.v4.widget.NestedScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFillViewport(...);
   *** setFillViewport(...);
   *** getMaxScrollAmount(...);
   *** isSmoothScrollingEnabled(...);
   *** setSmoothScrollingEnabled(...);
   *** arrowScroll(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeScrollDeltaToGetChildRectOnScreen(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** executeKeyEvent(...);
   *** fling(...);
   *** fullScroll(...);
   *** hasNestedScrollingParent(...);
   *** onAttachedToWindow(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** pageScroll(...);
   *** setOnScrollChangeListener(...);
   *** smoothScrollBy(...);
   *** smoothScrollTo(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class android.support.v4.widget.TextViewCompat
-keepclassmembers class android.support.v4.widget.TextViewCompat {
   *** getAutoSizeMaxTextSize(...);
   *** getAutoSizeMinTextSize(...);
   *** getAutoSizeStepGranularity(...);
   *** getAutoSizeTextAvailableSizes(...);
   *** getAutoSizeTextType(...);
   *** getCompoundDrawablesRelative(...);
   *** getFirstBaselineToTopHeight(...);
   *** getLastBaselineToBottomHeight(...);
   *** getMaxLines(...);
   *** getMinLines(...);
   *** getTextMetricsParams(...);
   *** setAutoSizeTextTypeUniformWithConfiguration(...);
   *** setAutoSizeTextTypeUniformWithPresetSizes(...);
   *** setAutoSizeTextTypeWithDefaults(...);
   *** setCompoundDrawablesRelative(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCustomSelectionActionModeCallback(...);
   *** setFirstBaselineToTopHeight(...);
   *** setLastBaselineToBottomHeight(...);
   *** setLineHeight(...);
   *** setPrecomputedText(...);
   *** setTextAppearance(...);
   *** setTextMetricsParams(...);
   *** wrapCustomSelectionActionModeCallback(...);
}

-keep class android.support.v4.view.AccessibilityDelegateCompat
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat {
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class android.support.v4.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider$VisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$VisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class android.support.v4.view.DisplayCutoutCompat
-keepclassmembers class android.support.v4.view.DisplayCutoutCompat {
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
}

-keep class android.support.v4.view.NestedScrollingChild
-keepclassmembers class android.support.v4.view.NestedScrollingChild {
}

-keep class android.support.v4.view.NestedScrollingChild2
-keepclassmembers class android.support.v4.view.NestedScrollingChild2 {
}

-keep class android.support.v4.view.NestedScrollingParent
-keepclassmembers class android.support.v4.view.NestedScrollingParent {
}

-keep class android.support.v4.view.NestedScrollingParent2
-keepclassmembers class android.support.v4.view.NestedScrollingParent2 {
}

-keep class android.support.v4.view.OnApplyWindowInsetsListener
-keepclassmembers class android.support.v4.view.OnApplyWindowInsetsListener {
}

-keep class android.support.v4.view.ScrollingView
-keepclassmembers class android.support.v4.view.ScrollingView {
}

-keep class android.support.v4.view.TintableBackgroundView
-keepclassmembers class android.support.v4.view.TintableBackgroundView {
}

-keep class android.support.v4.view.ViewPropertyAnimatorListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorListener {
}

-keep class android.support.v4.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorUpdateListener {
}

-keep class android.support.v4.view.MenuItemCompat$OnActionExpandListener
-keepclassmembers class android.support.v4.view.MenuItemCompat$OnActionExpandListener {
}

-keep class android.support.v4.view.MenuItemCompat
-keepclassmembers class android.support.v4.view.MenuItemCompat {
   *** collapseActionView(...);
   *** expandActionView(...);
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getContentDescription(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getNumericModifiers(...);
   *** getTooltipText(...);
   *** isActionViewExpanded(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setAlphabeticShortcut(...);
   *** setContentDescription(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setTooltipText(...);
}

-keep class android.support.v4.view.PointerIconCompat
-keepclassmembers class android.support.v4.view.PointerIconCompat {
   *** getPointerIcon(...);
   *** create(...);
   *** getSystemIcon(...);
   *** load(...);
}

-keep class android.support.v4.view.ScaleGestureDetectorCompat
-keepclassmembers class android.support.v4.view.ScaleGestureDetectorCompat {
   *** isQuickScaleEnabled(...);
   *** isQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
}

-keep class android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat
-keepclassmembers class android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat {
}

-keep class android.support.v4.view.ViewCompat
-keepclassmembers class android.support.v4.view.ViewCompat {
   <init>(...);
   *** addKeyboardNavigationClusters(...);
   *** addOnUnhandledKeyEventListener(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** cancelDragAndDrop(...);
   *** combineMeasuredStates(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** generateViewId(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAlpha(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getDisplay(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getImportantForAutofill(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMatrix(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getNextClusterForwardId(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getScrollIndicators(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasExplicitFocusable(...);
   *** hasNestedScrollingParent(...);
   *** hasNestedScrollingParent(...);
   *** hasOnClickListeners(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAttachedToWindow(...);
   *** isFocusedByDefault(...);
   *** isImportantForAccessibility(...);
   *** isImportantForAutofill(...);
   *** isInLayout(...);
   *** isKeyboardNavigationCluster(...);
   *** isLaidOut(...);
   *** isLayoutDirectionResolved(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** jumpDrawablesToCurrentState(...);
   *** keyboardNavigationClusterSearch(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** removeOnUnhandledKeyEventListener(...);
   *** requestApplyInsets(...);
   *** requireViewById(...);
   *** resolveSizeAndState(...);
   *** restoreDefaultFocus(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityLiveRegion(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setAutofillHints(...);
   *** setBackground(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setFocusedByDefault(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setImportantForAutofill(...);
   *** setKeyboardNavigationCluster(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setNextClusterForwardId(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setPointerIcon(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setScrollIndicators(...);
   *** setScrollIndicators(...);
   *** setTooltipText(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setX(...);
   *** setY(...);
   *** setZ(...);
   *** startDragAndDrop(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
   *** updateDragShadow(...);
}

-keep class android.support.v4.view.ViewPropertyAnimatorCompat
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class android.support.v4.view.WindowInsetsCompat
-keepclassmembers class android.support.v4.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getText(...);
   *** setText(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityWindowInfoCompat {
   *** getAnchor(...);
   *** getChildCount(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** getLayer(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class android.support.v4.internal.view.SupportMenu
-keepclassmembers class android.support.v4.internal.view.SupportMenu {
}

-keep class android.support.v4.internal.view.SupportMenuItem
-keepclassmembers class android.support.v4.internal.view.SupportMenuItem {
}

-keep class android.support.v4.graphics.drawable.DrawableCompat
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat {
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** clearColorFilter(...);
   *** getAlpha(...);
   *** getColorFilter(...);
   *** getLayoutDirection(...);
   *** inflate(...);
   *** isAutoMirrored(...);
   *** jumpToCurrentState(...);
   *** setAutoMirrored(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setLayoutDirection(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.content.ContextCompat
-keepclassmembers class android.support.v4.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDataDir(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class android.support.v4.content.FileProvider
-keepclassmembers class android.support.v4.content.FileProvider {
   <init>(...);
   *** delete(...);
   *** getType(...);
   *** getUriForFile(...);
   *** insert(...);
   *** onCreate(...);
   *** query(...);
   *** update(...);
}

-keep class android.support.v4.content.PermissionChecker
-keepclassmembers class android.support.v4.content.PermissionChecker {
   *** checkCallingOrSelfPermission(...);
   *** checkCallingPermission(...);
   *** checkPermission(...);
   *** checkSelfPermission(...);
}

-keep class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback
-keepclassmembers class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback {
}

-keep class android.support.v4.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class android.support.v4.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator
-keepclassmembers class android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator {
}

-keep class android.support.v4.app.ActivityCompat
-keepclassmembers class android.support.v4.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** postponeEnterTransition(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
}

-keep class android.support.v4.app.TaskStackBuilder$SupportParentable
-keepclassmembers class android.support.v4.app.TaskStackBuilder$SupportParentable {
}

-keep class android.support.v4.app.TaskStackBuilder
-keepclassmembers class android.support.v4.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class android.support.v4.text.PrecomputedTextCompat$Params
-keepclassmembers class android.support.v4.text.PrecomputedTextCompat$Params {
   *** getBreakStrategy(...);
   *** getHyphenationFrequency(...);
   *** getTextDirection(...);
   *** getTextPaint(...);
}

-keep class android.support.v4.text.PrecomputedTextCompat
-keepclassmembers class android.support.v4.text.PrecomputedTextCompat {
   *** getParagraphCount(...);
   *** charAt(...);
   *** create(...);
   *** getParagraphEnd(...);
   *** getParagraphStart(...);
   *** getParams(...);
   *** getSpanEnd(...);
   *** getSpanFlags(...);
   *** getSpanStart(...);
   *** getSpans(...);
   *** getTextFuture(...);
   *** length(...);
   *** nextSpanTransition(...);
   *** removeSpan(...);
   *** setSpan(...);
   *** subSequence(...);
}

# ACW for Xamarin.Android.Support.CoordinaterLayout
-keep class android.support.design.widget.CoordinatorLayout$Behavior
-keepclassmembers class android.support.design.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class android.support.design.widget.CoordinatorLayout$Behavior
-keepclassmembers class android.support.design.widget.CoordinatorLayout$Behavior {
}

-keep class android.support.design.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class android.support.design.widget.CoordinatorLayout
-keepclassmembers class android.support.design.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

# ACW for Xamarin.Android.Support.Core.UI
-keep class android.support.v4.app.ActionBarDrawerToggle
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

# ACW for Xamarin.Android.Support.Core.Utils
# ACW for Xamarin.Android.Support.CursorAdapter
# ACW for Xamarin.Android.Support.CustomTabs
# ACW for Xamarin.Android.Support.CustomView
# ACW for Xamarin.Android.Support.Design
-keep class android.support.design.widget.TabLayout$TabView
-keepclassmembers class android.support.design.widget.TabLayout$TabView {
   *** setSelected(...);
   <init>(...);
   *** getTab(...);
   *** onMeasure(...);
}

-keep class android.support.design.widget.TabLayout$BaseOnTabSelectedListener
-keepclassmembers class android.support.design.widget.TabLayout$BaseOnTabSelectedListener {
}

-keep class mono.android.support.design.widget.TabLayout_BaseOnTabSelectedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.TabLayout_BaseOnTabSelectedListenerImplementor {
}

-keep class android.support.design.widget.TabLayout$Tab
-keepclassmembers class android.support.design.widget.TabLayout$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** isSelected(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class android.support.design.widget.TabLayout
-keepclassmembers class android.support.design.widget.TabLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasUnboundedRipple(...);
   *** isInlineLabel(...);
   *** setInlineLabel(...);
   *** getSelectedTabPosition(...);
   *** getTabCount(...);
   *** getTabGravity(...);
   *** setTabGravity(...);
   *** getTabIconTint(...);
   *** setTabIconTint(...);
   *** isTabIndicatorFullWidth(...);
   *** setTabIndicatorFullWidth(...);
   *** getTabIndicatorGravity(...);
   *** getTabMode(...);
   *** setTabMode(...);
   *** getTabRippleColor(...);
   *** setTabRippleColor(...);
   *** getTabSelectedIndicator(...);
   *** getTabTextColors(...);
   *** setTabTextColors(...);
   *** addOnTabSelectedListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** clearOnTabSelectedListeners(...);
   *** createTabFromPool(...);
   *** getTabAt(...);
   *** newTab(...);
   *** releaseFromTabPool(...);
   *** removeAllTabs(...);
   *** removeOnTabSelectedListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** setInlineLabelResource(...);
   *** setOnTabSelectedListener(...);
   *** setScrollPosition(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicatorColor(...);
   *** setSelectedTabIndicatorGravity(...);
   *** setSelectedTabIndicatorHeight(...);
   *** setTabIconTintResource(...);
   *** setTabRippleColorResource(...);
   *** setTabTextColors(...);
   *** setTabsFromPagerAdapter(...);
   *** setUnboundedRipple(...);
   *** setUnboundedRippleResource(...);
   *** setupWithViewPager(...);
   *** setupWithViewPager(...);
}

-keep class android.support.design.widget.TextInputLayout$AccessibilityDelegate
-keepclassmembers class android.support.design.widget.TextInputLayout$AccessibilityDelegate {
   <init>(...);
}

-keep class android.support.design.widget.TextInputLayout
-keepclassmembers class android.support.design.widget.TextInputLayout {
   *** setEnabled(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBoxBackgroundColor(...);
   *** setBoxBackgroundColor(...);
   *** getBoxCornerRadiusBottomEnd(...);
   *** getBoxCornerRadiusBottomStart(...);
   *** getBoxCornerRadiusTopEnd(...);
   *** getBoxCornerRadiusTopStart(...);
   *** getBoxStrokeColor(...);
   *** setBoxStrokeColor(...);
   *** isCounterEnabled(...);
   *** setCounterEnabled(...);
   *** getCounterMaxLength(...);
   *** setCounterMaxLength(...);
   *** getDefaultHintTextColor(...);
   *** setDefaultHintTextColor(...);
   *** getEditText(...);
   *** getError(...);
   *** setError(...);
   *** getErrorCurrentTextColors(...);
   *** isErrorEnabled(...);
   *** setErrorEnabled(...);
   *** getHelperText(...);
   *** setHelperText(...);
   *** getHelperTextCurrentTextColor(...);
   *** isHelperTextEnabled(...);
   *** setHelperTextEnabled(...);
   *** getHint(...);
   *** setHint(...);
   *** isHintAnimationEnabled(...);
   *** setHintAnimationEnabled(...);
   *** isHintEnabled(...);
   *** setHintEnabled(...);
   *** getPasswordVisibilityToggleContentDescription(...);
   *** setPasswordVisibilityToggleContentDescription(...);
   *** getPasswordVisibilityToggleDrawable(...);
   *** setPasswordVisibilityToggleDrawable(...);
   *** isPasswordVisibilityToggleEnabled(...);
   *** setPasswordVisibilityToggleEnabled(...);
   *** getTypeface(...);
   *** setTypeface(...);
   *** dispatchRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** passwordVisibilityToggleRequested(...);
   *** setBoxBackgroundColorResource(...);
   *** setBoxBackgroundMode(...);
   *** setBoxCornerRadii(...);
   *** setBoxCornerRadiiResources(...);
   *** setErrorTextAppearance(...);
   *** setErrorTextColor(...);
   *** setHelperTextColor(...);
   *** setHelperTextTextAppearance(...);
   *** setHintTextAppearance(...);
   *** setPasswordVisibilityToggleContentDescription(...);
   *** setPasswordVisibilityToggleDrawable(...);
   *** setPasswordVisibilityToggleTintList(...);
   *** setPasswordVisibilityToggleTintMode(...);
   *** setTextInputAccessibilityDelegate(...);
}

-keep class android.support.design.widget.AppBarLayout$LayoutParams
-keepclassmembers class android.support.design.widget.AppBarLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getScrollFlags(...);
   *** setScrollFlags(...);
   *** getScrollInterpolator(...);
   *** setScrollInterpolator(...);
}

-keep class android.support.design.widget.AppBarLayout$OnOffsetChangedListener
-keepclassmembers class android.support.design.widget.AppBarLayout$OnOffsetChangedListener {
}

-keep class mono.android.support.design.widget.AppBarLayout_OnOffsetChangedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.AppBarLayout_OnOffsetChangedListenerImplementor {
}

-keep class android.support.design.widget.AppBarLayout$ScrollingViewBehavior
-keepclassmembers class android.support.design.widget.AppBarLayout$ScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** onMeasureChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class android.support.design.widget.AppBarLayout
-keepclassmembers class android.support.design.widget.AppBarLayout {
   <init>(...);
   <init>(...);
   *** isLiftOnScroll(...);
   *** setLiftOnScroll(...);
   *** getMinimumHeightForVisibleOverlappingContent(...);
   *** getTargetElevation(...);
   *** setTargetElevation(...);
   *** getTotalScrollRange(...);
   *** addOnOffsetChangedListener(...);
   *** removeOnOffsetChangedListener(...);
   *** setExpanded(...);
   *** setExpanded(...);
   *** setLiftable(...);
   *** setLifted(...);
}

-keep class android.support.design.widget.BottomNavigationView$OnNavigationItemReselectedListener
-keepclassmembers class android.support.design.widget.BottomNavigationView$OnNavigationItemReselectedListener {
}

-keep class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemReselectedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemReselectedListenerImplementor {
}

-keep class android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener
-keepclassmembers class android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class android.support.design.widget.BottomNavigationView
-keepclassmembers class android.support.design.widget.BottomNavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundResource(...);
   *** setItemBackgroundResource(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMaxItemCount(...);
   *** getMenu(...);
   *** getSelectedItemId(...);
   *** setSelectedItemId(...);
   *** inflateMenu(...);
   *** setItemIconSizeRes(...);
   *** setOnNavigationItemReselectedListener(...);
   *** setOnNavigationItemSelectedListener(...);
}

-keep class android.support.design.widget.BottomSheetDialog
-keepclassmembers class android.support.design.widget.BottomSheetDialog {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.design.widget.HeaderScrollingViewBehavior
-keepclassmembers class android.support.design.widget.HeaderScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** getOverlayTop(...);
   *** setOverlayTop(...);
   *** onMeasureChild(...);
}

-keep class android.support.design.widget.HeaderScrollingViewBehavior
-keepclassmembers class android.support.design.widget.HeaderScrollingViewBehavior {
}

-keep class android.support.design.widget.ViewOffsetBehavior
-keepclassmembers class android.support.design.widget.ViewOffsetBehavior {
   <init>(...);
   <init>(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** layoutChild(...);
   *** onLayoutChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class android.support.design.internal.BottomNavigationItemView
-keepclassmembers class android.support.design.internal.BottomNavigationItemView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemData(...);
   *** getItemPosition(...);
   *** setItemPosition(...);
   *** initialize(...);
   *** onCreateDrawableState(...);
   *** prefersCondensedTitle(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setIcon(...);
   *** setIconSize(...);
   *** setIconTintList(...);
   *** setItemBackground(...);
   *** setItemBackground(...);
   *** setLabelVisibilityMode(...);
   *** setShifting(...);
   *** setShortcut(...);
   *** setTextAppearanceActive(...);
   *** setTextAppearanceInactive(...);
   *** setTextColor(...);
   *** setTitle(...);
   *** showsIcon(...);
}

-keep class android.support.design.internal.BottomNavigationMenuView
-keepclassmembers class android.support.design.internal.BottomNavigationMenuView {
   <init>(...);
   <init>(...);
   *** getIconTintList(...);
   *** setIconTintList(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundRes(...);
   *** setItemBackgroundRes(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getSelectedItemId(...);
   *** getWindowAnimations(...);
   *** buildMenuView(...);
   *** createDefaultColorStateList(...);
   *** initialize(...);
   *** onLayout(...);
   *** setPresenter(...);
   *** updateMenuView(...);
}

-keep class android.support.design.internal.BottomNavigationPresenter
-keepclassmembers class android.support.design.internal.BottomNavigationPresenter {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** flagActionItems(...);
   *** getMenuView(...);
   *** initForMenu(...);
   *** onCloseMenu(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSubMenuSelected(...);
   *** setBottomNavigationMenuView(...);
   *** setCallback(...);
   *** setUpdateSuspended(...);
   *** updateMenuView(...);
}

# ACW for Xamarin.Android.Support.DocumentFile
# ACW for Xamarin.Android.Support.DrawerLayout
-keep class android.support.v4.widget.DrawerLayout$DrawerListener
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerListener {
}

-keep class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class android.support.v4.widget.DrawerLayout$LayoutParams
-keepclassmembers class android.support.v4.widget.DrawerLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.widget.DrawerLayout
-keepclassmembers class android.support.v4.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.Android.Support.Fragment
-keep class android.support.v4.app.FragmentActivity
-keepclassmembers class android.support.v4.app.FragmentActivity {
   <init>(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getLifecycle(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** getViewModelStore(...);
   *** onAttachFragment(...);
   *** onPrepareOptionsPanel(...);
   *** onResumeFragments(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class android.support.v4.app.Fragment$SavedState
-keepclassmembers class android.support.v4.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.app.Fragment
-keepclassmembers class android.support.v4.app.Fragment {
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class android.support.v4.app.FragmentManager$BackStackEntry
-keepclassmembers class android.support.v4.app.FragmentManager$BackStackEntry {
}

-keep class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class android.support.v4.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class android.support.v4.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class android.support.v4.app.FragmentPagerAdapter
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter {
   <init>(...);
   *** getItem(...);
   *** getItemId(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.app.FragmentPagerAdapter
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter {
   *** getItem(...);
   *** getCount(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

# ACW for Xamarin.Android.Support.Interpolator
# ACW for Xamarin.Android.Support.Loader
-keep class android.support.v4.content.Loader$OnLoadCanceledListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCanceledListener {
}

-keep class android.support.v4.content.Loader$OnLoadCompleteListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCompleteListener {
}

-keep class android.support.v4.content.Loader
-keepclassmembers class android.support.v4.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class android.support.v4.app.LoaderManager$LoaderCallbacks
-keepclassmembers class android.support.v4.app.LoaderManager$LoaderCallbacks {
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.Android.Support.LocalBroadcastManager
# ACW for Xamarin.Android.Support.Media.Compat
# ACW for Xamarin.Android.Support.Print
# ACW for Xamarin.Android.Support.SlidingPaneLayout
# ACW for Xamarin.Android.Support.SwipeRefreshLayout
-keep class android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback {
}

-keep class android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.android.support.v4.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class android.support.v4.widget.SwipeRefreshLayout
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** getProgressCircleDiameter(...);
   *** getProgressViewEndOffset(...);
   *** getProgressViewStartOffset(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setOnChildScrollUpCallback(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** setSlingshotDistance(...);
}

# ACW for Xamarin.Android.Support.Transition
# ACW for Xamarin.Android.Support.v4
# ACW for Xamarin.Android.Support.v7.AppCompat
-keep class android.support.v7.graphics.drawable.DrawableWrapper
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper {
   <init>(...);
   *** getOpacity(...);
   *** getWrappedDrawable(...);
   *** setWrappedDrawable(...);
   *** draw(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** unscheduleDrawable(...);
}

-keep class android.support.v7.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class android.support.v7.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class android.support.v7.content.res.AppCompatResources
-keepclassmembers class android.support.v7.content.res.AppCompatResources {
   *** getColorStateList(...);
   *** getDrawable(...);
}

-keep class android.support.v7.app.AlertDialog$Builder
-keepclassmembers class android.support.v7.app.AlertDialog$Builder {
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** create(...);
   *** setAdapter(...);
   *** setCancelable(...);
   *** setCursor(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setInverseBackgroundForced(...);
   *** setItems(...);
   *** setItems(...);
   *** setMessage(...);
   *** setMessage(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setNegativeButton(...);
   *** setNegativeButton(...);
   *** setNegativeButtonIcon(...);
   *** setNeutralButton(...);
   *** setNeutralButton(...);
   *** setNeutralButtonIcon(...);
   *** setOnCancelListener(...);
   *** setOnDismissListener(...);
   *** setOnItemSelectedListener(...);
   *** setOnKeyListener(...);
   *** setPositiveButton(...);
   *** setPositiveButton(...);
   *** setPositiveButtonIcon(...);
   *** setRecycleOnMeasureEnabled(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setView(...);
   *** setView(...);
   *** setView(...);
   *** show(...);
}

-keep class android.support.v7.app.AlertDialog
-keepclassmembers class android.support.v7.app.AlertDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getListView(...);
   *** getButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setMessage(...);
   *** setView(...);
   *** setView(...);
}

-keep class android.support.v7.app.ActionBar$LayoutParams
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v7.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class android.support.v7.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.android.support.v7.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.android.support.v7.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class android.support.v7.app.ActionBar$OnNavigationListener
-keepclassmembers class android.support.v7.app.ActionBar$OnNavigationListener {
}

-keep class android.support.v7.app.ActionBar$Tab
-keepclassmembers class android.support.v7.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class android.support.v7.app.ActionBar$Tab
-keepclassmembers class android.support.v7.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class android.support.v7.app.ActionBar$TabListener
-keepclassmembers class android.support.v7.app.ActionBar$TabListener {
}

-keep class android.support.v7.app.ActionBar
-keepclassmembers class android.support.v7.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class android.support.v7.app.ActionBar
-keepclassmembers class android.support.v7.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class android.support.v7.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle$Delegate {
}

-keep class android.support.v7.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class android.support.v7.app.ActionBarDrawerToggle
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class android.support.v7.app.AppCompatActivity
-keepclassmembers class android.support.v7.app.AppCompatActivity {
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onMenuItemSelected(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class android.support.v7.app.AppCompatDelegate
-keepclassmembers class android.support.v7.app.AppCompatDelegate {
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class android.support.v7.app.AppCompatDelegate
-keepclassmembers class android.support.v7.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class android.support.v7.app.AppCompatDialog
-keepclassmembers class android.support.v7.app.AppCompatDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getSupportActionBar(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onWindowStartingSupportActionMode(...);
   *** supportRequestWindowFeature(...);
}

-keep class android.support.v7.app.AppCompatCallback
-keepclassmembers class android.support.v7.app.AppCompatCallback {
}

-keep class android.support.v7.widget.Toolbar$LayoutParams
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v7.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class android.support.v7.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.android.support.v7.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class android.support.v7.widget.Toolbar
-keepclassmembers class android.support.v7.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** onLayout(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class android.support.v7.widget.AppCompatAutoCompleteTextView
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
}

-keep class android.support.v7.widget.AppCompatButton
-keepclassmembers class android.support.v7.widget.AppCompatButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** setSupportAllCaps(...);
}

-keep class android.support.v7.widget.AppCompatCheckBox
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
}

-keep class android.support.v7.widget.AppCompatImageButton
-keepclassmembers class android.support.v7.widget.AppCompatImageButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class android.support.v7.widget.AppCompatRadioButton
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
}

-keep class android.support.v7.widget.DecorToolbar
-keepclassmembers class android.support.v7.widget.DecorToolbar {
}

-keep class android.support.v7.widget.LinearLayoutCompat
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBaselineAligned(...);
   *** setBaselineAligned(...);
   *** getBaselineAlignedChildIndex(...);
   *** setBaselineAlignedChildIndex(...);
   *** getDividerDrawable(...);
   *** setDividerDrawable(...);
   *** getDividerPadding(...);
   *** setDividerPadding(...);
   *** getDividerWidth(...);
   *** getGravity(...);
   *** setGravity(...);
   *** isMeasureWithLargestChildEnabled(...);
   *** setMeasureWithLargestChildEnabled(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getShowDividers(...);
   *** setShowDividers(...);
   *** getWeightSum(...);
   *** setWeightSum(...);
   *** hasDividerBeforeChildAt(...);
   *** onLayout(...);
   *** setHorizontalGravity(...);
   *** setVerticalGravity(...);
}

-keep class android.support.v7.widget.PopupMenu$OnDismissListener
-keepclassmembers class android.support.v7.widget.PopupMenu$OnDismissListener {
}

-keep class mono.android.support.v7.widget.PopupMenu_OnDismissListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.PopupMenu_OnDismissListenerImplementor {
}

-keep class android.support.v7.widget.PopupMenu$OnMenuItemClickListener
-keepclassmembers class android.support.v7.widget.PopupMenu$OnMenuItemClickListener {
}

-keep class mono.android.support.v7.widget.PopupMenu_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.PopupMenu_OnMenuItemClickListenerImplementor {
}

-keep class android.support.v7.widget.PopupMenu
-keepclassmembers class android.support.v7.widget.PopupMenu {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDragToOpenListener(...);
   *** getGravity(...);
   *** setGravity(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** dismiss(...);
   *** inflate(...);
   *** setOnDismissListener(...);
   *** setOnMenuItemClickListener(...);
   *** show(...);
}

-keep class android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class android.support.v7.widget.ScrollingTabContainerView
-keepclassmembers class android.support.v7.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class android.support.v7.widget.SwitchCompat
-keepclassmembers class android.support.v7.widget.SwitchCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getShowText(...);
   *** setShowText(...);
   *** getSplitTrack(...);
   *** setSplitTrack(...);
   *** getSwitchMinWidth(...);
   *** setSwitchMinWidth(...);
   *** getSwitchPadding(...);
   *** setSwitchPadding(...);
   *** getTextOff(...);
   *** setTextOff(...);
   *** getTextOn(...);
   *** setTextOn(...);
   *** getThumbDrawable(...);
   *** setThumbDrawable(...);
   *** getThumbTextPadding(...);
   *** setThumbTextPadding(...);
   *** getThumbTintList(...);
   *** setThumbTintList(...);
   *** getThumbTintMode(...);
   *** setThumbTintMode(...);
   *** getTrackDrawable(...);
   *** setTrackDrawable(...);
   *** getTrackTintList(...);
   *** setTrackTintList(...);
   *** getTrackTintMode(...);
   *** setTrackTintMode(...);
   *** onMeasure(...);
   *** setSwitchTextAppearance(...);
   *** setSwitchTypeface(...);
   *** setSwitchTypeface(...);
   *** setThumbResource(...);
   *** setTrackResource(...);
}

-keep class android.support.v7.view.ActionMode$Callback
-keepclassmembers class android.support.v7.view.ActionMode$Callback {
}

-keep class android.support.v7.view.ActionMode
-keepclassmembers class android.support.v7.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v7.view.ActionMode
-keepclassmembers class android.support.v7.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v7.view.ContextThemeWrapper
-keepclassmembers class android.support.v7.view.ContextThemeWrapper {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getThemeResId(...);
   *** applyOverrideConfiguration(...);
   *** onApplyThemeResource(...);
}

-keep class android.support.v7.view.menu.MenuBuilder$Callback
-keepclassmembers class android.support.v7.view.menu.MenuBuilder$Callback {
}

-keep class android.support.v7.view.menu.MenuBuilder
-keepclassmembers class android.support.v7.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class android.support.v7.view.menu.MenuPresenter$Callback
-keepclassmembers class android.support.v7.view.menu.MenuPresenter$Callback {
}

-keep class android.support.v7.view.menu.MenuPresenter
-keepclassmembers class android.support.v7.view.menu.MenuPresenter {
}

-keep class android.support.v7.view.menu.MenuView$ItemView
-keepclassmembers class android.support.v7.view.menu.MenuView$ItemView {
}

-keep class android.support.v7.view.menu.MenuView
-keepclassmembers class android.support.v7.view.menu.MenuView {
}

-keep class android.support.v7.view.menu.MenuItemImpl
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class android.support.v7.view.menu.SubMenuBuilder
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.Android.Support.v7.CardView
-keep class android.support.v7.widget.CardView
-keepclassmembers class android.support.v7.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

# ACW for Xamarin.Android.Support.v7.RecyclerView
-keep class android.support.v7.widget.GridLayoutManager$LayoutParams
-keepclassmembers class android.support.v7.widget.GridLayoutManager$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
}

-keep class android.support.v7.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class android.support.v7.widget.GridLayoutManager$SpanSizeLookup {
   <init>(...);
   *** isSpanIndexCacheEnabled(...);
   *** setSpanIndexCacheEnabled(...);
   *** getSpanGroupIndex(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
   *** invalidateSpanIndexCache(...);
}

-keep class android.support.v7.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class android.support.v7.widget.GridLayoutManager$SpanSizeLookup {
   *** getSpanSize(...);
}

-keep class android.support.v7.widget.GridLayoutManager
-keepclassmembers class android.support.v7.widget.GridLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanCount(...);
   *** setSpanCount(...);
   *** getSpanSizeLookup(...);
   *** setSpanSizeLookup(...);
}

-keep class android.support.v7.widget.LinearLayoutManager
-keepclassmembers class android.support.v7.widget.LinearLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isLayoutRTL(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRecycleChildrenOnDetach(...);
   *** setRecycleChildrenOnDetach(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** isSmoothScrollbarEnabled(...);
   *** setSmoothScrollbarEnabled(...);
   *** getStackFromEnd(...);
   *** setStackFromEnd(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPosition(...);
   *** findFirstVisibleItemPosition(...);
   *** findLastCompletelyVisibleItemPosition(...);
   *** findLastVisibleItemPosition(...);
   *** generateDefaultLayoutParams(...);
   *** getExtraLayoutSpace(...);
   *** prepareForDrop(...);
   *** scrollToPositionWithOffset(...);
}

-keep class android.support.v7.widget.LinearSmoothScroller
-keepclassmembers class android.support.v7.widget.LinearSmoothScroller {
   <init>(...);
   *** getHorizontalSnapPreference(...);
   *** getVerticalSnapPreference(...);
   *** calculateDtToFit(...);
   *** calculateDxToMakeVisible(...);
   *** calculateDyToMakeVisible(...);
   *** calculateSpeedPerPixel(...);
   *** calculateTimeForDeceleration(...);
   *** calculateTimeForScrolling(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** updateActionForInterimTarget(...);
}

-keep class android.support.v7.widget.LinearSnapHelper
-keepclassmembers class android.support.v7.widget.LinearSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class android.support.v7.widget.OrientationHelper
-keepclassmembers class android.support.v7.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getLayoutManager(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getTotalSpaceChange(...);
   *** createHorizontalHelper(...);
   *** createOrientationHelper(...);
   *** createVerticalHelper(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
   *** onLayoutComplete(...);
}

-keep class android.support.v7.widget.OrientationHelper
-keepclassmembers class android.support.v7.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
}

-keep class android.support.v7.widget.PagerSnapHelper
-keepclassmembers class android.support.v7.widget.PagerSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class android.support.v7.widget.RecyclerView$Adapter
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class android.support.v7.widget.RecyclerView$Adapter
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class android.support.v7.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
}

-keep class android.support.v7.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObserver {
}

-keep class android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class android.support.v7.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class android.support.v7.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemDecoration
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemDecoration
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemDecoration {
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class android.support.v7.widget.RecyclerView$LayoutParams
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.android.support.v7.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class android.support.v7.widget.RecyclerView$OnFlingListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class android.support.v7.widget.RecyclerView$OnFlingListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class android.support.v7.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.android.support.v7.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class android.support.v7.widget.RecyclerView$OnScrollListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class android.support.v7.widget.RecyclerView$OnScrollListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnScrollListener {
}

-keep class android.support.v7.widget.RecyclerView$RecycledViewPool
-keepclassmembers class android.support.v7.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class android.support.v7.widget.RecyclerView$Recycler
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class android.support.v7.widget.RecyclerView$RecyclerListener
-keepclassmembers class android.support.v7.widget.RecyclerView$RecyclerListener {
}

-keep class mono.android.support.v7.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider {
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class android.support.v7.widget.RecyclerView$State
-keepclassmembers class android.support.v7.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewHolder
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewHolder
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder {
}

-keep class android.support.v7.widget.RecyclerView
-keepclassmembers class android.support.v7.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** swapAdapter(...);
}

-keep class android.support.v7.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

-keep class android.support.v7.widget.SnapHelper
-keepclassmembers class android.support.v7.widget.SnapHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** calculateDistanceToFinalSnap(...);
   *** calculateScrollDistance(...);
   *** createScroller(...);
   *** createSnapScroller(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
   *** onFling(...);
}

-keep class android.support.v7.widget.SnapHelper
-keepclassmembers class android.support.v7.widget.SnapHelper {
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class android.support.v7.widget.helper.ItemTouchUIUtil
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtil {
}

-keep class android.support.v7.widget.helper.ItemTouchHelper$Callback
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback {
   <init>(...);
   *** getBoundingBoxMargin(...);
   *** getDefaultUIUtil(...);
   *** isItemViewSwipeEnabled(...);
   *** isLongPressDragEnabled(...);
   *** canDropOver(...);
   *** chooseDropTarget(...);
   *** clearView(...);
   *** convertToAbsoluteDirection(...);
   *** convertToRelativeDirection(...);
   *** getAnimationDuration(...);
   *** getMoveThreshold(...);
   *** getMovementFlags(...);
   *** getSwipeEscapeVelocity(...);
   *** getSwipeThreshold(...);
   *** getSwipeVelocityThreshold(...);
   *** interpolateOutOfBoundsScroll(...);
   *** makeFlag(...);
   *** makeMovementFlags(...);
   *** onChildDraw(...);
   *** onChildDrawOver(...);
   *** onMove(...);
   *** onMoved(...);
   *** onSelectedChanged(...);
   *** onSwiped(...);
}

-keep class android.support.v7.widget.helper.ItemTouchHelper$Callback
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback {
   *** getMovementFlags(...);
   *** onMove(...);
   *** onSwiped(...);
}

-keep class android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler {
}

-keep class android.support.v7.widget.helper.ItemTouchHelper
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** onChildViewAttachedToWindow(...);
   *** onChildViewDetachedFromWindow(...);
   *** startDrag(...);
   *** startSwipe(...);
}

# ACW for Xamarin.Android.Support.Vector.Drawable
# ACW for Xamarin.Android.Support.VersionedParcelable
# ACW for Xamarin.Android.Support.ViewPager
-keep class android.support.v4.view.PagerAdapter
-keepclassmembers class android.support.v4.view.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class android.support.v4.view.PagerAdapter
-keepclassmembers class android.support.v4.view.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.view.ViewPager$OnAdapterChangeListener
-keepclassmembers class android.support.v4.view.ViewPager$OnAdapterChangeListener {
}

-keep class mono.android.support.v4.view.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class android.support.v4.view.ViewPager$OnPageChangeListener
-keepclassmembers class android.support.v4.view.ViewPager$OnPageChangeListener {
}

-keep class mono.android.support.v4.view.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPager_OnPageChangeListenerImplementor {
}

-keep class android.support.v4.view.ViewPager$PageTransformer
-keepclassmembers class android.support.v4.view.ViewPager$PageTransformer {
}

-keep class android.support.v4.view.ViewPager
-keepclassmembers class android.support.v4.view.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.Essentials
# ACW for Xamarin.Forms.Platform.Android
# ACW for Xamarin.Forms.Platform
# ACW for Xamarin.GooglePlayServices.Base
-keep class com.google.android.gms.common.GoogleApiAvailability
-keepclassmembers class com.google.android.gms.common.GoogleApiAvailability {
   <init>(...);
   *** getInstance(...);
   *** checkApiAvailability(...);
   *** getErrorDialog(...);
   *** getErrorDialog(...);
   *** getErrorResolutionPendingIntent(...);
   *** getErrorString(...);
   *** isUserResolvableError(...);
   *** makeGooglePlayServicesAvailable(...);
   *** setDefaultNotificationChannelId(...);
   *** showErrorDialogFragment(...);
   *** showErrorDialogFragment(...);
   *** showErrorNotification(...);
   *** showErrorNotification(...);
   *** zaa(...);
   *** zaa(...);
   *** zaa(...);
   *** zaa(...);
}

-keep class com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl
-keepclassmembers class com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl {
   <init>(...);
   <init>(...);
   *** getApi(...);
   *** getClientKey(...);
   *** doExecute(...);
   *** onSetFailedResult(...);
   *** run(...);
   *** setFailedResult(...);
}

-keep class com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl
-keepclassmembers class com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl {
   *** doExecute(...);
   *** createFailedResult(...);
}

-keep class com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder
-keepclassmembers class com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder {
}

-keep class com.google.android.gms.common.api.internal.BaseImplementation
-keepclassmembers class com.google.android.gms.common.api.internal.BaseImplementation {
   <init>(...);
}

-keep class com.google.android.gms.common.api.internal.BasePendingResult
-keepclassmembers class com.google.android.gms.common.api.internal.BasePendingResult {
   <init>(...);
   <init>(...);
   *** isCanceled(...);
   *** isReady(...);
   *** addStatusListener(...);
   *** await(...);
   *** await(...);
   *** cancel(...);
   *** createFailedResult(...);
   *** setCancelToken(...);
   *** setResult(...);
   *** setResultCallback(...);
   *** setResultCallback(...);
   *** zab(...);
   *** zab(...);
   *** zam(...);
   *** zat(...);
   *** zau(...);
}

-keep class com.google.android.gms.common.api.internal.BasePendingResult
-keepclassmembers class com.google.android.gms.common.api.internal.BasePendingResult {
   *** createFailedResult(...);
}

-keep class com.google.android.gms.common.api.internal.GoogleApiManager
-keepclassmembers class com.google.android.gms.common.api.internal.GoogleApiManager {
   *** handleMessage(...);
   *** reportSignOut(...);
   *** zaa(...);
   *** zaa(...);
   *** zaa(...);
   *** zaa(...);
   *** zaa(...);
   *** zaa(...);
   *** zaa(...);
   *** zaa(...);
   *** zab(...);
   *** zabc(...);
   *** zabd(...);
   *** zac(...);
   *** zao(...);
}

-keep class com.google.android.gms.common.api.internal.RemoteCall
-keepclassmembers class com.google.android.gms.common.api.internal.RemoteCall {
}

-keep class com.google.android.gms.common.api.internal.SignInConnectionListener
-keepclassmembers class com.google.android.gms.common.api.internal.SignInConnectionListener {
}

-keep class com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey
-keepclassmembers class com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey {
   *** equals(...);
   *** hashCode(...);
}

-keep class com.google.android.gms.common.api.internal.ListenerHolder$Notifier
-keepclassmembers class com.google.android.gms.common.api.internal.ListenerHolder$Notifier {
}

-keep class com.google.android.gms.common.api.internal.ListenerHolder
-keepclassmembers class com.google.android.gms.common.api.internal.ListenerHolder {
   *** hasListener(...);
   *** clear(...);
   *** getListenerKey(...);
   *** notifyListener(...);
}

-keep class com.google.android.gms.common.api.internal.RegisterListenerMethod
-keepclassmembers class com.google.android.gms.common.api.internal.RegisterListenerMethod {
   <init>(...);
   <init>(...);
   *** getListenerKey(...);
   *** clearListener(...);
   *** getRequiredFeatures(...);
   *** registerListener(...);
   *** shouldAutoResolveMissingFeatures(...);
}

-keep class com.google.android.gms.common.api.internal.RegisterListenerMethod
-keepclassmembers class com.google.android.gms.common.api.internal.RegisterListenerMethod {
   *** registerListener(...);
}

-keep class com.google.android.gms.common.api.internal.RegistrationMethods$Builder
-keepclassmembers class com.google.android.gms.common.api.internal.RegistrationMethods$Builder {
   *** build(...);
   *** register(...);
   *** register(...);
   *** setAutoResolveMissingFeatures(...);
   *** setFeatures(...);
   *** unregister(...);
   *** unregister(...);
   *** withHolder(...);
}

-keep class com.google.android.gms.common.api.internal.RegistrationMethods
-keepclassmembers class com.google.android.gms.common.api.internal.RegistrationMethods {
   *** builder(...);
}

-keep class com.google.android.gms.common.api.internal.TaskApiCall$Builder
-keepclassmembers class com.google.android.gms.common.api.internal.TaskApiCall$Builder {
   *** build(...);
   *** execute(...);
   *** run(...);
   *** setAutoResolveMissingFeatures(...);
   *** setFeatures(...);
}

-keep class com.google.android.gms.common.api.internal.TaskApiCall
-keepclassmembers class com.google.android.gms.common.api.internal.TaskApiCall {
   <init>(...);
   *** builder(...);
   *** doExecute(...);
   *** shouldAutoResolveMissingFeatures(...);
   *** zabt(...);
}

-keep class com.google.android.gms.common.api.internal.TaskApiCall
-keepclassmembers class com.google.android.gms.common.api.internal.TaskApiCall {
   *** doExecute(...);
}

-keep class com.google.android.gms.common.api.internal.UnregisterListenerMethod
-keepclassmembers class com.google.android.gms.common.api.internal.UnregisterListenerMethod {
   <init>(...);
   *** getListenerKey(...);
   *** unregisterListener(...);
}

-keep class com.google.android.gms.common.api.internal.UnregisterListenerMethod
-keepclassmembers class com.google.android.gms.common.api.internal.UnregisterListenerMethod {
   *** unregisterListener(...);
}

-keep class com.google.android.gms.common.api.internal.zaae
-keepclassmembers class com.google.android.gms.common.api.internal.zaae {
   *** zaa(...);
   *** zaa(...);
   *** zao(...);
}

-keep class com.google.android.gms.common.api.internal.zabq
-keepclassmembers class com.google.android.gms.common.api.internal.zabq {
   <init>(...);
   *** onReceive(...);
   *** unregister(...);
   *** zac(...);
}

-keep class com.google.android.gms.common.api.internal.zabr
-keepclassmembers class com.google.android.gms.common.api.internal.zabr {
   <init>(...);
   *** zas(...);
}

-keep class com.google.android.gms.common.api.internal.zabr
-keepclassmembers class com.google.android.gms.common.api.internal.zabr {
   *** zas(...);
}

-keep class com.google.android.gms.common.api.internal.zacm
-keepclassmembers class com.google.android.gms.common.api.internal.zacm {
   <init>(...);
   *** andFinally(...);
   *** onResult(...);
   *** then(...);
   *** zaa(...);
}

-keep class com.google.android.gms.common.api.internal.zai
-keepclassmembers class com.google.android.gms.common.api.internal.zai {
   *** equals(...);
   *** hashCode(...);
   *** zaa(...);
   *** zaa(...);
   *** zan(...);
}

-keep class com.google.android.gms.common.api.internal.zal
-keepclassmembers class com.google.android.gms.common.api.internal.zal {
   <init>(...);
   *** onCancel(...);
   *** zaa(...);
   *** zab(...);
   *** zao(...);
   *** zaq(...);
}

-keep class com.google.android.gms.common.api.internal.zal
-keepclassmembers class com.google.android.gms.common.api.internal.zal {
   *** zaa(...);
   *** zao(...);
}

-keep class com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks
-keepclassmembers class com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks {
}

-keep class com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener
-keepclassmembers class com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener {
}

-keep class com.google.android.gms.common.api.GoogleApiClient
-keepclassmembers class com.google.android.gms.common.api.GoogleApiClient {
   <init>(...);
   *** getAllClients(...);
   *** getContext(...);
   *** isConnected(...);
   *** isConnecting(...);
   *** getLooper(...);
   *** blockingConnect(...);
   *** blockingConnect(...);
   *** clearDefaultAccountAndReconnect(...);
   *** connect(...);
   *** connect(...);
   *** disconnect(...);
   *** dump(...);
   *** dumpAll(...);
   *** enqueue(...);
   *** execute(...);
   *** getClient(...);
   *** getConnectionResult(...);
   *** hasApi(...);
   *** hasConnectedApi(...);
   *** isConnectionCallbacksRegistered(...);
   *** isConnectionFailedListenerRegistered(...);
   *** maybeSignIn(...);
   *** maybeSignOut(...);
   *** reconnect(...);
   *** registerConnectionCallbacks(...);
   *** registerConnectionFailedListener(...);
   *** registerListener(...);
   *** stopAutoManage(...);
   *** unregisterConnectionCallbacks(...);
   *** unregisterConnectionFailedListener(...);
   *** zaa(...);
   *** zab(...);
}

-keep class com.google.android.gms.common.api.Api$AbstractClientBuilder
-keepclassmembers class com.google.android.gms.common.api.Api$AbstractClientBuilder {
   <init>(...);
}

-keep class com.google.android.gms.common.api.Api$AbstractClientBuilder
-keepclassmembers class com.google.android.gms.common.api.Api$AbstractClientBuilder {
}

-keep class com.google.android.gms.common.api.Api$AnyClientKey
-keepclassmembers class com.google.android.gms.common.api.Api$AnyClientKey {
   <init>(...);
}

-keep class com.google.android.gms.common.api.Api$BaseClientBuilder
-keepclassmembers class com.google.android.gms.common.api.Api$BaseClientBuilder {
   <init>(...);
   *** getPriority(...);
   *** getImpliedScopes(...);
}

-keep class com.google.android.gms.common.api.Api$ClientKey
-keepclassmembers class com.google.android.gms.common.api.Api$ClientKey {
   <init>(...);
}

-keep class com.google.android.gms.common.api.Api
-keepclassmembers class com.google.android.gms.common.api.Api {
   <init>(...);
   *** getName(...);
   *** getClientKey(...);
   *** zah(...);
   *** zai(...);
}

-keep class com.google.android.gms.common.api.GoogleApi$Settings
-keepclassmembers class com.google.android.gms.common.api.GoogleApi$Settings {
}

-keep class com.google.android.gms.common.api.GoogleApi
-keepclassmembers class com.google.android.gms.common.api.GoogleApi {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getApi(...);
   *** getApiOptions(...);
   *** getApplicationContext(...);
   *** getInstanceId(...);
   *** getLooper(...);
   *** asGoogleApiClient(...);
   *** disconnectService(...);
   *** doBestEffortWrite(...);
   *** doBestEffortWrite(...);
   *** doRead(...);
   *** doRead(...);
   *** doRegisterEventListener(...);
   *** doRegisterEventListener(...);
   *** doUnregisterEventListener(...);
   *** doWrite(...);
   *** doWrite(...);
   *** registerListener(...);
   *** zak(...);
}

-keep class com.google.android.gms.common.api.GoogleApiClient
-keepclassmembers class com.google.android.gms.common.api.GoogleApiClient {
   *** isConnected(...);
   *** isConnecting(...);
   *** blockingConnect(...);
   *** blockingConnect(...);
   *** clearDefaultAccountAndReconnect(...);
   *** connect(...);
   *** disconnect(...);
   *** dump(...);
   *** getConnectionResult(...);
   *** hasConnectedApi(...);
   *** isConnectionCallbacksRegistered(...);
   *** isConnectionFailedListenerRegistered(...);
   *** reconnect(...);
   *** registerConnectionCallbacks(...);
   *** registerConnectionFailedListener(...);
   *** stopAutoManage(...);
   *** unregisterConnectionCallbacks(...);
   *** unregisterConnectionFailedListener(...);
}

-keep class com.google.android.gms.common.api.PendingResult$StatusListener
-keepclassmembers class com.google.android.gms.common.api.PendingResult$StatusListener {
}

-keep class mono.com.google.android.gms.common.api.PendingResult_StatusListenerImplementor
-keepclassmembers class mono.com.google.android.gms.common.api.PendingResult_StatusListenerImplementor {
}

-keep class com.google.android.gms.common.api.PendingResult
-keepclassmembers class com.google.android.gms.common.api.PendingResult {
   <init>(...);
   *** isCanceled(...);
   *** addStatusListener(...);
   *** await(...);
   *** await(...);
   *** cancel(...);
   *** setResultCallback(...);
   *** setResultCallback(...);
   *** then(...);
   *** zam(...);
}

-keep class com.google.android.gms.common.api.PendingResult
-keepclassmembers class com.google.android.gms.common.api.PendingResult {
   *** isCanceled(...);
   *** await(...);
   *** await(...);
   *** cancel(...);
   *** setResultCallback(...);
   *** setResultCallback(...);
}

-keep class com.google.android.gms.common.api.ResultTransform
-keepclassmembers class com.google.android.gms.common.api.ResultTransform {
   <init>(...);
   *** createFailedResult(...);
   *** onFailure(...);
   *** onSuccess(...);
}

-keep class com.google.android.gms.common.api.ResultTransform
-keepclassmembers class com.google.android.gms.common.api.ResultTransform {
   *** onSuccess(...);
}

-keep class com.google.android.gms.common.api.TransformedResult
-keepclassmembers class com.google.android.gms.common.api.TransformedResult {
   <init>(...);
   *** andFinally(...);
   *** then(...);
}

-keep class com.google.android.gms.common.api.TransformedResult
-keepclassmembers class com.google.android.gms.common.api.TransformedResult {
   *** andFinally(...);
   *** then(...);
}

# ACW for Xamarin.GooglePlayServices.Basement
-keep class com.google.android.gms.common.ConnectionResult
-keepclassmembers class com.google.android.gms.common.ConnectionResult {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getErrorCode(...);
   *** getErrorMessage(...);
   *** hasResolution(...);
   *** isSuccess(...);
   *** getResolution(...);
   *** equals(...);
   *** hashCode(...);
   *** startResolutionForResult(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.Feature
-keepclassmembers class com.google.android.gms.common.Feature {
   <init>(...);
   <init>(...);
   *** getName(...);
   *** getVersion(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.GoogleApiAvailabilityLight
-keepclassmembers class com.google.android.gms.common.GoogleApiAvailabilityLight {
   *** getInstance(...);
   *** cancelAvailabilityErrorNotifications(...);
   *** getApkVersion(...);
   *** getClientVersion(...);
   *** getErrorResolutionIntent(...);
   *** getErrorResolutionIntent(...);
   *** getErrorResolutionPendingIntent(...);
   *** getErrorResolutionPendingIntent(...);
   *** getErrorString(...);
   *** isGooglePlayServicesAvailable(...);
   *** isGooglePlayServicesAvailable(...);
   *** isPlayServicesPossiblyUpdating(...);
   *** isPlayStorePossiblyUpdating(...);
   *** isUninstalledAppPossiblyUpdating(...);
   *** isUserResolvableError(...);
   *** verifyGooglePlayServicesIsAvailable(...);
}

-keep class com.google.android.gms.common.util.BiConsumer
-keepclassmembers class com.google.android.gms.common.util.BiConsumer {
}

-keep class com.google.android.gms.common.internal.ICancelToken
-keepclassmembers class com.google.android.gms.common.internal.ICancelToken {
}

-keep class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable {
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
}

-keep class com.google.android.gms.common.api.Result
-keepclassmembers class com.google.android.gms.common.api.Result {
}

-keep class com.google.android.gms.common.api.ResultCallback
-keepclassmembers class com.google.android.gms.common.api.ResultCallback {
}

-keep class com.google.android.gms.common.api.Response
-keepclassmembers class com.google.android.gms.common.api.Response {
   <init>(...);
   <init>(...);
   *** getResult(...);
   *** setResult(...);
}

-keep class com.google.android.gms.common.api.ResultCallbacks
-keepclassmembers class com.google.android.gms.common.api.ResultCallbacks {
   <init>(...);
   *** onFailure(...);
   *** onResult(...);
   *** onSuccess(...);
}

-keep class com.google.android.gms.common.api.ResultCallbacks
-keepclassmembers class com.google.android.gms.common.api.ResultCallbacks {
   *** onFailure(...);
   *** onSuccess(...);
}

-keep class com.google.android.gms.common.api.Scope
-keepclassmembers class com.google.android.gms.common.api.Scope {
   <init>(...);
   *** getScopeUri(...);
   *** equals(...);
   *** hashCode(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.api.Status
-keepclassmembers class com.google.android.gms.common.api.Status {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasResolution(...);
   *** isCanceled(...);
   *** isInterrupted(...);
   *** isSuccess(...);
   *** getResolution(...);
   *** getStatus(...);
   *** getStatusCode(...);
   *** getStatusMessage(...);
   *** equals(...);
   *** hashCode(...);
   *** startResolutionForResult(...);
   *** toString(...);
   *** writeToParcel(...);
   *** describeContents(...);
}

-keep class com.google.android.gms.common.api.internal.LifecycleFragment
-keepclassmembers class com.google.android.gms.common.api.internal.LifecycleFragment {
}

-keep class com.google.android.gms.common.api.internal.StatusExceptionMapper
-keepclassmembers class com.google.android.gms.common.api.internal.StatusExceptionMapper {
}

-keep class com.google.android.gms.common.api.internal.LifecycleActivity
-keepclassmembers class com.google.android.gms.common.api.internal.LifecycleActivity {
   <init>(...);
   <init>(...);
   *** isChimera(...);
   *** isSupport(...);
   *** asActivity(...);
   *** asFragmentActivity(...);
   *** asObject(...);
}

-keep class com.google.android.gms.common.api.internal.LifecycleCallback
-keepclassmembers class com.google.android.gms.common.api.internal.LifecycleCallback {
   <init>(...);
   *** getActivity(...);
   *** dump(...);
   *** getFragment(...);
   *** getFragment(...);
   *** getFragment(...);
   *** onActivityResult(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
}

# ACW for Xamarin.GooglePlayServices.Location
-keep class com.google.android.gms.location.LocationServices
-keepclassmembers class com.google.android.gms.location.LocationServices {
   *** getFusedLocationProviderClient(...);
   *** getFusedLocationProviderClient(...);
   *** getGeofencingClient(...);
   *** getGeofencingClient(...);
   *** getSettingsClient(...);
   *** getSettingsClient(...);
}

-keep class com.google.android.gms.location.FusedLocationProviderClient
-keepclassmembers class com.google.android.gms.location.FusedLocationProviderClient {
   <init>(...);
   <init>(...);
   *** flushLocations(...);
   *** getLastLocation(...);
   *** getLocationAvailability(...);
   *** removeLocationUpdates(...);
   *** removeLocationUpdates(...);
   *** requestLocationUpdates(...);
   *** requestLocationUpdates(...);
   *** setMockLocation(...);
   *** setMockMode(...);
}

-keep class com.google.android.gms.location.GeofencingClient
-keepclassmembers class com.google.android.gms.location.GeofencingClient {
   <init>(...);
   <init>(...);
   *** addGeofences(...);
   *** removeGeofences(...);
   *** removeGeofences(...);
}

-keep class com.google.android.gms.location.SettingsClient
-keepclassmembers class com.google.android.gms.location.SettingsClient {
   <init>(...);
   <init>(...);
   *** checkLocationSettings(...);
}

-keep class com.google.android.gms.location.GeofencingRequest
-keepclassmembers class com.google.android.gms.location.GeofencingRequest {
   *** getGeofences(...);
   *** getInitialTrigger(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.FusedLocationProviderApi
-keepclassmembers class com.google.android.gms.location.FusedLocationProviderApi {
}

-keep class com.google.android.gms.location.Geofence
-keepclassmembers class com.google.android.gms.location.Geofence {
}

-keep class com.google.android.gms.location.GeofencingApi
-keepclassmembers class com.google.android.gms.location.GeofencingApi {
}

-keep class com.google.android.gms.location.LocationListener
-keepclassmembers class com.google.android.gms.location.LocationListener {
}

-keep class com.google.android.gms.location.SettingsApi
-keepclassmembers class com.google.android.gms.location.SettingsApi {
}

-keep class com.google.android.gms.location.LocationAvailability
-keepclassmembers class com.google.android.gms.location.LocationAvailability {
   *** isLocationAvailable(...);
   *** equals(...);
   *** extractLocationAvailability(...);
   *** hasLocationAvailability(...);
   *** hashCode(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.LocationCallback
-keepclassmembers class com.google.android.gms.location.LocationCallback {
   <init>(...);
   *** onLocationAvailability(...);
   *** onLocationResult(...);
}

-keep class com.google.android.gms.location.LocationRequest
-keepclassmembers class com.google.android.gms.location.LocationRequest {
   <init>(...);
   *** getExpirationTime(...);
   *** getFastestInterval(...);
   *** getInterval(...);
   *** isFastestIntervalExplicitlySet(...);
   *** getMaxWaitTime(...);
   *** getNumUpdates(...);
   *** getPriority(...);
   *** getSmallestDisplacement(...);
   *** create(...);
   *** equals(...);
   *** hashCode(...);
   *** setExpirationDuration(...);
   *** setExpirationTime(...);
   *** setFastestInterval(...);
   *** setInterval(...);
   *** setMaxWaitTime(...);
   *** setNumUpdates(...);
   *** setPriority(...);
   *** setSmallestDisplacement(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.LocationResult
-keepclassmembers class com.google.android.gms.location.LocationResult {
   *** getLastLocation(...);
   *** getLocations(...);
   *** create(...);
   *** equals(...);
   *** extractResult(...);
   *** hasResult(...);
   *** hashCode(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.LocationSettingsRequest
-keepclassmembers class com.google.android.gms.location.LocationSettingsRequest {
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.LocationSettingsResponse
-keepclassmembers class com.google.android.gms.location.LocationSettingsResponse {
   <init>(...);
   *** getLocationSettingsStates(...);
}

-keep class com.google.android.gms.location.LocationSettingsStates
-keepclassmembers class com.google.android.gms.location.LocationSettingsStates {
   <init>(...);
   *** isBlePresent(...);
   *** isBleUsable(...);
   *** isGpsPresent(...);
   *** isGpsUsable(...);
   *** isLocationPresent(...);
   *** isLocationUsable(...);
   *** isNetworkLocationPresent(...);
   *** isNetworkLocationUsable(...);
   *** fromIntent(...);
   *** writeToParcel(...);
}

# ACW for Xamarin.GooglePlayServices.Maps
# ACW for Xamarin.GooglePlayServices.Places.PlaceReport
# ACW for Xamarin.GooglePlayServices.Tasks
-keep class com.google.android.gms.tasks.Task
-keepclassmembers class com.google.android.gms.tasks.Task {
   <init>(...);
   *** getException(...);
   *** isCanceled(...);
   *** isComplete(...);
   *** isSuccessful(...);
   *** getResult(...);
   *** addOnCanceledListener(...);
   *** addOnCanceledListener(...);
   *** addOnCanceledListener(...);
   *** addOnCompleteListener(...);
   *** addOnCompleteListener(...);
   *** addOnCompleteListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** continueWith(...);
   *** continueWith(...);
   *** continueWithTask(...);
   *** continueWithTask(...);
   *** getResult(...);
   *** onSuccessTask(...);
   *** onSuccessTask(...);
}

-keep class com.google.android.gms.tasks.TaskCompletionSource
-keepclassmembers class com.google.android.gms.tasks.TaskCompletionSource {
   <init>(...);
   <init>(...);
   *** getTask(...);
   *** setException(...);
   *** setResult(...);
   *** trySetException(...);
   *** trySetResult(...);
}

-keep class com.google.android.gms.tasks.CancellationToken
-keepclassmembers class com.google.android.gms.tasks.CancellationToken {
   <init>(...);
   *** isCancellationRequested(...);
   *** onCanceledRequested(...);
}

-keep class com.google.android.gms.tasks.CancellationToken
-keepclassmembers class com.google.android.gms.tasks.CancellationToken {
   *** isCancellationRequested(...);
   *** onCanceledRequested(...);
}

-keep class com.google.android.gms.tasks.Continuation
-keepclassmembers class com.google.android.gms.tasks.Continuation {
}

-keep class com.google.android.gms.tasks.OnCanceledListener
-keepclassmembers class com.google.android.gms.tasks.OnCanceledListener {
}

-keep class com.google.android.gms.tasks.OnCompleteListener
-keepclassmembers class com.google.android.gms.tasks.OnCompleteListener {
}

-keep class com.google.android.gms.tasks.OnFailureListener
-keepclassmembers class com.google.android.gms.tasks.OnFailureListener {
}

-keep class com.google.android.gms.tasks.OnSuccessListener
-keepclassmembers class com.google.android.gms.tasks.OnSuccessListener {
}

-keep class com.google.android.gms.tasks.OnTokenCanceledListener
-keepclassmembers class com.google.android.gms.tasks.OnTokenCanceledListener {
}

-keep class com.google.android.gms.tasks.SuccessContinuation
-keepclassmembers class com.google.android.gms.tasks.SuccessContinuation {
}

-keep class com.google.android.gms.tasks.Task
-keepclassmembers class com.google.android.gms.tasks.Task {
   *** getException(...);
   *** isCanceled(...);
   *** isComplete(...);
   *** isSuccessful(...);
   *** getResult(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** getResult(...);
}

